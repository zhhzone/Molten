!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADD_ELE_TAG	molten_intercept.h	59;"	d
ADD_HASH_MOLTEN_KEY	molten_chain.h	46;"	d
ADD_INTERCEPTOR_ELE	molten_intercept.h	51;"	d
ADD_INTERCEPTOR_TAG	molten_intercept.h	55;"	d
ALLOC_LOG_SIZE	molten_log.h	62;"	d
AN_CLIENT	molten_span.h	40;"	d
AN_SERVER	molten_span.h	39;"	d
ARGS_ELLIPSIS	molten_intercept.c	90;"	d	file:
ARGS_ELLIPSIS_LEN	molten_intercept.c	91;"	d	file:
ARGS_MAX_LEN	molten_intercept.c	89;"	d	file:
ARGS_REAL_LEN	molten_intercept.c	92;"	d	file:
AWK	Makefile	/^AWK = gawk$/;"	m
BA_ERROR	molten_span.h	/^enum ba_type {BA_NORMAL, BA_SA, BA_SA_HOST, BA_SA_IP, BA_SA_DSN, BA_ERROR, BA_PATH};$/;"	e	enum:ba_type
BA_NORMAL	molten_span.h	/^enum ba_type {BA_NORMAL, BA_SA, BA_SA_HOST, BA_SA_IP, BA_SA_DSN, BA_ERROR, BA_PATH};$/;"	e	enum:ba_type
BA_PATH	molten_span.h	/^enum ba_type {BA_NORMAL, BA_SA, BA_SA_HOST, BA_SA_IP, BA_SA_DSN, BA_ERROR, BA_PATH};$/;"	e	enum:ba_type
BA_SA	molten_span.h	/^enum ba_type {BA_NORMAL, BA_SA, BA_SA_HOST, BA_SA_IP, BA_SA_DSN, BA_ERROR, BA_PATH};$/;"	e	enum:ba_type
BA_SA_DSN	molten_span.h	/^enum ba_type {BA_NORMAL, BA_SA, BA_SA_HOST, BA_SA_IP, BA_SA_DSN, BA_ERROR, BA_PATH};$/;"	e	enum:ba_type
BA_SA_HOST	molten_span.h	/^enum ba_type {BA_NORMAL, BA_SA, BA_SA_HOST, BA_SA_IP, BA_SA_DSN, BA_ERROR, BA_PATH};$/;"	e	enum:ba_type
BA_SA_IP	molten_span.h	/^enum ba_type {BA_NORMAL, BA_SA, BA_SA_HOST, BA_SA_IP, BA_SA_DSN, BA_ERROR, BA_PATH};$/;"	e	enum:ba_type
CC	Makefile	/^CC = cc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O0$/;"	m
CFLAGS_CLEAN	Makefile	/^CFLAGS_CLEAN = $(CFLAGS)$/;"	m
CHECK_SAPI_NAME	molten.c	34;"	d	file:
CLOSE_LOG_FD	molten_log.c	19;"	d	file:
COMMON_FLAGS	Makefile	/^COMMON_FLAGS = $(DEFS) $(INCLUDES) $(EXTRA_INCLUDES) $(CPPFLAGS) $(PHP_FRAMEWORKPATH)$/;"	m
COMPILE_DL_MOLTEN	config.h	5;"	d
CONFIGURE_COMMAND	Makefile	/^CONFIGURE_COMMAND = '.\/configure' '--with-php-config=\/usr\/local\/php5.6\/bin\/php-config' '--enable-level-id=yes'$/;"	m
CONFIGURE_OPTIONS	Makefile	/^CONFIGURE_OPTIONS = '--with-php-config=\/usr\/local\/php5.6\/bin\/php-config' '--enable-level-id=yes'$/;"	m
CPP	Makefile	/^CPP = cc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = -DHAVE_CONFIG_H$/;"	m
CTRL_ENABLE	molten_ctrl.h	45;"	d
CURL_SHARED_LIBADD	Makefile	/^CURL_SHARED_LIBADD = -lcurl$/;"	m
CUR_DIR	run-tests.php	/^$CUR_DIR = getcwd();$/;"	v
CXX	Makefile	/^CXX =$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O0$/;"	m
CXXFLAGS_CLEAN	Makefile	/^CXXFLAGS_CLEAN = $(CXXFLAGS)$/;"	m
DEFAULT_LOG_DIR	molten_log.h	63;"	d
DEFAULT_PATH	molten_log.h	64;"	d
DEFS	Makefile	/^DEFS = -DPHP_ATOM_INC -I$(top_builddir)\/include -I$(top_builddir)\/main -I$(top_srcdir)$/;"	m
DETAILED	run-tests.php	/^					$DETAILED = true;$/;"	v
DETAILED	run-tests.php	/^	$DETAILED = 0;$/;"	v
DETAILED	run-tests.php	/^	$DETAILED = getenv('TEST_PHP_DETAILED');$/;"	v
EGREP	Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
ERROR_OUTPUT	molten_status.c	68;"	d	file:
EXTENSION_DIR	Makefile	/^EXTENSION_DIR = \/usr\/local\/php5.6\/lib\/php\/extensions\/debug-non-zts-20131226$/;"	m
EXTRA_LDFLAGS	Makefile	/^EXTRA_LDFLAGS =$/;"	m
EXTRA_LIBS	Makefile	/^EXTRA_LIBS =$/;"	m
FCNTL_LOCK_PATH	common/molten_lock.h	29;"	d
FILE_BINARY	run-tests.php	/^		define('FILE_BINARY', 0);$/;"	d
GET_FUNC_ARG	molten_intercept.c	19;"	d	file:
GET_FUNC_ARG	molten_intercept.c	22;"	d	file:
GET_FUNC_ARG_UNDEC	molten_intercept.c	20;"	d	file:
GET_FUNC_ARG_UNDEC	molten_intercept.c	23;"	d	file:
HAS_CURL	config.h	8;"	d
HAS_KAFKA	config.h	11;"	d
HAS_MYSQLI	config.h	14;"	d
HAS_MYSQLND	config.h	17;"	d
HAS_PDO	config.h	20;"	d
HAVE_DLFCN_H	config.h	23;"	d
HAVE_INTTYPES_H	config.h	26;"	d
HAVE_MEMORY_H	config.h	29;"	d
HAVE_MMAP	config.h	32;"	d
HAVE_MUNMAP	config.h	35;"	d
HAVE_STDINT_H	config.h	38;"	d
HAVE_STDLIB_H	config.h	41;"	d
HAVE_STRINGS_H	config.h	44;"	d
HAVE_STRING_H	config.h	47;"	d
HAVE_SYS_STAT_H	config.h	50;"	d
HAVE_SYS_TYPES_H	config.h	53;"	d
HAVE_UNISTD_H	config.h	56;"	d
HEADER_INTERNAL_CALL	molten_intercept.h	48;"	d
HEADER_OUT_CALL	molten_intercept.h	49;"	d
HOST_NAME_MAX	php_molten.h	47;"	d
INCLUDES	Makefile	/^INCLUDES = -I\/usr\/local\/php5.6\/include\/php -I\/usr\/local\/php5.6\/include\/php\/main -I\/usr\/local\/php5.6\/include\/php\/TSRM -I\/usr\/local\/php5.6\/include\/php\/Zend -I\/usr\/local\/php5.6\/include\/php\/ext -I\/usr\/local\/php5.6\/include\/php\/ext\/date\/lib -I\/usr\/local\/include -I\/root\/source\/molten\/Molten -I\/root\/source\/molten\/Molten\/common$/;"	m
INIT_INTERCEPTOR_ELE	molten_intercept.c	1228;"	d	file:
INIT_INTERCEPTOR_ELE_TAG	molten_intercept.c	1236;"	d	file:
INSTALL	Makefile	/^INSTALL = $(top_srcdir)\/build\/shtool install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_HEADERS	Makefile	/^INSTALL_HEADERS =$/;"	m
IN_REDIRECT	run-tests.php	/^			$IN_REDIRECT = false;$/;"	v
IN_REDIRECT	run-tests.php	/^		$IN_REDIRECT = eval($section_text['REDIRECTTEST']);$/;"	v
IS_FALSE	php7_wrapper.h	51;"	d
IS_TRUE	php7_wrapper.h	50;"	d
JUNIT	run-tests.php	/^		$JUNIT = FALSE;$/;"	v
JUNIT	run-tests.php	/^		$JUNIT = array($/;"	v
JUNIT	run-tests.php	/^	$JUNIT = getenv('TEST_PHP_JUNIT');$/;"	v
KAFKA_SHARED_LIBADD	Makefile	/^KAFKA_SHARED_LIBADD = -Wl,-rpath,\/usr\/local\/lib -L\/usr\/local\/lib -lrdkafka$/;"	m
LDFLAGS	Makefile	/^LDFLAGS =$/;"	m
LFLAGS	Makefile	/^LFLAGS =$/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LOCK_PATH_SIZE	common/molten_lock.h	30;"	d
LOG_FORMAT	molten_log.h	65;"	d
LOOP_COUNT	molten_util.c	19;"	d	file:
LOOP_COUNT	molten_util.c	21;"	d	file:
LOOP_COUNT	molten_util.c	23;"	d	file:
LOOP_COUNT	molten_util.c	25;"	d	file:
LOOP_COUNT	molten_util.c	27;"	d	file:
MAX_SPANS	molten_util.c	30;"	d	file:
MAX_SPANS_LEN	molten_util.c	31;"	d	file:
MIE	molten_intercept.c	1313;"	d	file:
MOLTEN_CHAIN_H	molten_chain.h	18;"	d
MOLTEN_CTRL_H	molten_ctrl.h	18;"	d
MOLTEN_ERROR	molten_util.h	61;"	d
MOLTEN_ERROR	molten_util.h	63;"	d
MOLTEN_EXT_VERSION	molten_util.h	54;"	d
MOLTEN_HEADER_FLAGS	molten_util.h	45;"	d
MOLTEN_HEADER_PARENT_SPAN_ID	molten_util.h	43;"	d
MOLTEN_HEADER_PREFIX	molten_util.h	33;"	d
MOLTEN_HEADER_PREFIX	molten_util.h	36;"	d
MOLTEN_HEADER_PREFIX_LEN	molten_util.h	40;"	d
MOLTEN_HEADER_SAMPLED	molten_util.h	44;"	d
MOLTEN_HEADER_SPAN_ID	molten_util.h	42;"	d
MOLTEN_HEADER_TRACE_ID	molten_util.h	41;"	d
MOLTEN_INTERCEMO_H	molten_intercept.h	18;"	d
MOLTEN_LOCK_H	common/molten_lock.h	17;"	d
MOLTEN_LOG_H	molten_log.h	18;"	d
MOLTEN_PHP7_WRAPPER_H	php7_wrapper.h	18;"	d
MOLTEN_REC_FLAGS	molten_util.h	51;"	d
MOLTEN_REC_HEADER_PREFIX	molten_util.h	34;"	d
MOLTEN_REC_HEADER_PREFIX	molten_util.h	37;"	d
MOLTEN_REC_PARENT_SPAN_ID	molten_util.h	49;"	d
MOLTEN_REC_SAMPLED	molten_util.h	50;"	d
MOLTEN_REC_SPAN_ID	molten_util.h	48;"	d
MOLTEN_REC_TRACE_ID	molten_util.h	47;"	d
MOLTEN_REPORT_H	molten_report.h	18;"	d
MOLTEN_SHM_H	common/molten_shm.h	18;"	d
MOLTEN_SPAN_H	molten_span.h	18;"	d
MOLTEN_STACK_H	common/molten_stack.h	17;"	d
MOLTEN_STATUS_H	molten_status.h	18;"	d
MOLTEN_STRUCT_H	molten_struct.h	18;"	d
MOLTEN_UTIL_H	molten_util.h	18;"	d
MO_ALLOC_INIT_ZVAL	php7_wrapper.h	185;"	d
MO_ALLOC_INIT_ZVAL	php7_wrapper.h	53;"	d
MO_COPY_ZVAL_TO_STRING	php7_wrapper.h	188;"	d
MO_COPY_ZVAL_TO_STRING	php7_wrapper.h	57;"	d
MO_CTRL_SHM	common/molten_shm.h	38;"	d
MO_DEFAULT_ID	molten_chain.h	41;"	d
MO_EX_OBJ	php7_wrapper.h	168;"	d
MO_EX_OBJ	php7_wrapper.h	172;"	d
MO_EX_OBJ	php7_wrapper.h	42;"	d
MO_EX_OBJCE	php7_wrapper.h	175;"	d
MO_EX_OBJCE	php7_wrapper.h	44;"	d
MO_EX_OBJ_ZVAL	php7_wrapper.h	174;"	d
MO_EX_OBJ_ZVAL	php7_wrapper.h	43;"	d
MO_EX_OPARR	php7_wrapper.h	176;"	d
MO_EX_OPARR	php7_wrapper.h	45;"	d
MO_FRAME_ENTRY	molten_util.h	56;"	d
MO_FRAME_EXIT	molten_util.h	57;"	d
MO_FREE_ALLOC_ZVAL	php7_wrapper.h	195;"	d
MO_FREE_ALLOC_ZVAL	php7_wrapper.h	63;"	d
MO_FREE_COPY_STRING	php7_wrapper.h	193;"	d
MO_FREE_COPY_STRING	php7_wrapper.h	62;"	d
MO_INIT_ZVAL	php7_wrapper.h	186;"	d
MO_INIT_ZVAL	php7_wrapper.h	54;"	d
MO_MAKE_STD_ZVAL	php7_wrapper.h	184;"	d
MO_MAKE_STD_ZVAL	php7_wrapper.h	52;"	d
MO_MAX_KEY_LEN	molten_chain.h	39;"	d
MO_MAX_SLOT	common/molten_shm.h	35;"	d
MO_MAX_VAL_LEN	molten_chain.h	40;"	d
MO_PHP_MAX_PARAMS_NUM	php7_wrapper.h	203;"	d
MO_RECORD_SHM	common/molten_shm.h	39;"	d
MO_SAMPLING_SHM	common/molten_shm.h	40;"	d
MO_SLOT_HEADER_MAGIC	common/molten_shm.h	44;"	d
MO_SLOT_MAGIC	common/molten_shm.h	43;"	d
MO_STR	php7_wrapper.h	177;"	d
MO_STR	php7_wrapper.h	46;"	d
MO_STR_LEN	php7_wrapper.h	178;"	d
MO_USEC_PER_SEC	molten_util.h	58;"	d
MO_ZVAL_STRING	php7_wrapper.h	179;"	d
MO_ZVAL_STRING	php7_wrapper.h	48;"	d
MO_ZVAL_STRINGL	php7_wrapper.h	180;"	d
MO_ZVAL_STRINGL	php7_wrapper.h	49;"	d
MO_Z_TYPE_P	php7_wrapper.h	/^static inline int MO_Z_TYPE_P(zval *z)$/;"	f
MO_Z_TYPE_P	php7_wrapper.h	200;"	d
MO_Z_TYPE_PP	php7_wrapper.h	105;"	d
MO_Z_TYPE_PP	php7_wrapper.h	201;"	d
OPENTRACING	molten_span.h	36;"	d
P7_STR_LEN	php7_wrapper.h	47;"	d
PACKAGE_BUGREPORT	config.h	62;"	d
PACKAGE_NAME	config.h	65;"	d
PACKAGE_STRING	config.h	68;"	d
PACKAGE_TARNAME	config.h	71;"	d
PACKAGE_URL	config.h	74;"	d
PACKAGE_VERSION	config.h	77;"	d
PATH_MAX	molten_log.h	59;"	d
PAYLOAD_SIZE	common/molten_shm.h	32;"	d
PDO_SET_EXCEPTION	molten_intercept.c	295;"	d	file:
PDO_SET_EXCEPTION	molten_intercept.c	302;"	d	file:
PHP_DEPRECATED_DIRECTIVES_REGEX	Makefile	/^PHP_DEPRECATED_DIRECTIVES_REGEX = '^(magic_quotes_(gpc|runtime|sybase)?|(zend_)?extension(_debug)?(_ts)?)[\\t\\ ]*='$/;"	m
PHP_EXECUTABLE	Makefile	/^PHP_EXECUTABLE = \/usr\/local\/php5.6\/bin\/php$/;"	m
PHP_FAILED_TESTS	run-tests.php	/^$PHP_FAILED_TESTS = array('BORKED' => array(), 'FAILED' => array(), 'WARNED' => array(), 'LEAKED' => array(), 'XFAILED' => array());$/;"	v
PHP_FUNCTION	molten.c	/^PHP_FUNCTION(molten_curl_exec)$/;"	f
PHP_FUNCTION	molten.c	/^PHP_FUNCTION(molten_curl_reset)$/;"	f
PHP_FUNCTION	molten.c	/^PHP_FUNCTION(molten_curl_setopt)$/;"	f
PHP_FUNCTION	molten.c	/^PHP_FUNCTION(molten_curl_setopt_array)$/;"	f
PHP_FUNCTION	molten.c	/^PHP_FUNCTION(molten_set_service_name)$/;"	f
PHP_MAJOR_VERSION	run-tests.php	/^	define("PHP_MAJOR_VERSION", $major);$/;"	d
PHP_MINFO_FUNCTION	molten.c	/^PHP_MINFO_FUNCTION(molten)$/;"	f
PHP_MINIT_FUNCTION	molten.c	/^PHP_MINIT_FUNCTION(molten)$/;"	f
PHP_MODULES	Makefile	/^PHP_MODULES = $(phplibdir)\/molten.la$/;"	m
PHP_MOLTEN_API	php_molten.h	24;"	d
PHP_MOLTEN_API	php_molten.h	26;"	d
PHP_MOLTEN_API	php_molten.h	28;"	d
PHP_MOLTEN_H	php_molten.h	18;"	d
PHP_MSHUTDOWN_FUNCTION	molten.c	/^PHP_MSHUTDOWN_FUNCTION(molten)$/;"	f
PHP_PECL_EXTENSION	Makefile	/^PHP_PECL_EXTENSION = molten$/;"	m
PHP_QA_EMAIL	run-tests.php	/^define('PHP_QA_EMAIL', 'qa-reports@lists.php.net');$/;"	d
PHP_RINIT_FUNCTION	molten.c	/^PHP_RINIT_FUNCTION(molten)$/;"	f
PHP_RSHUTDOWN_FUNCTION	molten.c	/^PHP_RSHUTDOWN_FUNCTION(molten)$/;"	f
PHP_TEST_SETTINGS	Makefile	/^PHP_TEST_SETTINGS = -d 'open_basedir=' -d 'output_buffering=0' -d 'memory_limit=-1'$/;"	m
PHP_TEST_SHARED_EXTENSIONS	Makefile	/^PHP_TEST_SHARED_EXTENSIONS =  ` \\$/;"	m
PHP_VERSION_ID	run-tests.php	/^	define("PHP_VERSION_ID", "{$major}0{$minor}$bug");$/;"	d
PHP_ZEND_EX	Makefile	/^PHP_ZEND_EX =$/;"	m
PTG	php_molten.h	100;"	d
QA_REPORTS_PAGE	run-tests.php	/^define('QA_REPORTS_PAGE', 'http:\/\/qa.php.net\/reports');$/;"	d
QA_SUBMISSION_PAGE	run-tests.php	/^define('QA_SUBMISSION_PAGE', 'http:\/\/qa.php.net\/buildtest-process.php');$/;"	d
RE2C	Makefile	/^RE2C = re2c$/;"	m
REC_DATA_SIZE	molten_ctrl.h	43;"	d
REPORT_FLAG	molten_report.h	30;"	d
RESPONSE_MAX_LEN	molten.c	356;"	d	file:
RIE	molten_intercept.c	1294;"	d	file:
SAMPLING_RATE	molten_ctrl.h	40;"	d
SAMPLING_REQ	molten_ctrl.h	41;"	d
SED	Makefile	/^SED = \/usr\/bin\/sed$/;"	m
SET_DEFAULT_EXCEPTION	molten_intercept.c	287;"	d	file:
SET_SPAN_EXCEPTION	molten_intercept.c	266;"	d	file:
SET_SPAN_EXCEPTION	molten_intercept.c	274;"	d	file:
SET_SPAN_EXCEPTION_EX	molten_intercept.c	285;"	d	file:
SHARED_LIBTOOL	Makefile	/^SHARED_LIBTOOL =$/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHLIB_DL_SUFFIX_NAME	Makefile	/^SHLIB_DL_SUFFIX_NAME = so$/;"	m
SHLIB_SUFFIX_NAME	Makefile	/^SHLIB_SUFFIX_NAME = so$/;"	m
SHM_PATH	common/molten_shm.h	47;"	d
SHM_PROJECT_ID	common/molten_shm.h	48;"	d
SHOW_ONLY_GROUPS	run-tests.php	/^					$SHOW_ONLY_GROUPS = explode(",", $argv[++$i]);;$/;"	v
SHOW_ONLY_GROUPS	run-tests.php	/^	$SHOW_ONLY_GROUPS = array();$/;"	v
SHOW_ONLY_GROUPS	run-tests.php	/^	$SHOW_ONLY_GROUPS = explode(",", getenv('SHOW_ONLY_GROUPS'));$/;"	v
SINK_HTTP	molten_log.h	73;"	d
SINK_KAFKA	molten_log.h	77;"	d
SINK_LOG	molten_log.h	68;"	d
SINK_NONE	molten_log.h	67;"	d
SINK_STD	molten_log.h	69;"	d
SINK_SYSLOG	molten_log.h	70;"	d
SLOT_ELEMENT	common/molten_shm.c	18;"	d	file:
SOCK_PATH	tool/ctrl.c	9;"	d	file:
SPANS_BREAK	molten_log.h	81;"	d
SPANS_WRAP	molten_log.h	80;"	d
SPAN_VERSION	molten_util.h	53;"	d
STACK_BLOCK_SIZE	common/molten_stack.h	21;"	d
STACK_ELE	common/molten_stack.c	19;"	d	file:
STATUS_URI	molten_status.h	28;"	d
STDC_HEADERS	config.h	80;"	d
SUCCESS	common/molten_lock.h	32;"	d
TESTED_PHP_VERSION	run-tests.php	/^	define('TESTED_PHP_VERSION', `$php -n -r "echo PHP_VERSION;"`);$/;"	d
TRAVIS_CI	run-tests.php	/^define('TRAVIS_CI' , (bool) getenv('TRAVIS'));$/;"	d
TRUE_OUTPUT	molten_status.c	71;"	d	file:
USE_LEVEL_ID	config.h	83;"	d
ZEND_EXT_TYPE	Makefile	/^ZEND_EXT_TYPE = zend_extension$/;"	m
ZIPKIN	molten_span.h	35;"	d
ZVAL_LONG_PLUS	molten_util.h	66;"	d
Z_RESVAL	php7_wrapper.h	181;"	d
Z_RESVAL_P	php7_wrapper.h	182;"	d
__DIR__	run-tests.php	/^	define('__DIR__', realpath(dirname(__FILE__)));$/;"	d
a	run-tests.php	/^	$a = test_name($a);$/;"	v
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
add_http_header	molten.c	/^static char *add_http_header(zval *header, char *key, char *value)$/;"	f	file:
add_http_trace_header	molten.c	/^void add_http_trace_header(mo_chain_t *pct, zval *header, char *span_id)$/;"	f
address	example/server.php	/^    $address = $hostname . ":" . $port;$/;"	v
all_targets	Makefile	/^all_targets = $(PHP_MODULES) $(PHP_ZEND_EX)$/;"	m
alloc_size	molten_log.h	/^    uint64_t alloc_size;$/;"	m	struct:__anon13
analyze_data_source	molten_intercept.c	/^static void analyze_data_source(zval *span, char *db_type, char *data_source, mo_frame_t *frame, mo_interceptor_t *pit)$/;"	f	file:
arg_count	molten_struct.h	/^    uint32_t        arg_count;        \/* arguments number *\/$/;"	m	struct:__anon20
argc	molten_struct.h	/^    int argc; $/;"	m	struct:mo_chain_st
argc	run-tests.php	/^	$argc = count($argv);$/;"	v
args	run-tests.php	/^	$args = isset($section_text['ARGS']) ? ' -- ' . $section_text['ARGS'] : '';$/;"	v
argv	molten_struct.h	/^    const char **argv;$/;"	m	struct:mo_chain_st
argv	run-tests.php	/^		$argv = array(__FILE__);$/;"	v
argv	run-tests.php	/^	$argv = array_merge($argv, explode(' ', getenv('TEST_PHP_ARGS')));$/;"	v
array_free_persist	php7_wrapper.h	/^static inline void array_free_persist(zval *arg)$/;"	f
array_init_persist	php7_wrapper.h	/^static inline void array_init_persist(zval *arg ZEND_FILE_LINE_DC)$/;"	f
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
attach_num	common/molten_shm.h	/^    int                 attach_num;     \/* the num of php extension attach *\/$/;"	m	struct:__anon3
autoconf	run-tests.php	/^					$autoconf = shell_exec('autoconf --version');$/;"	v
autoconf	run-tests.php	/^					$autoconf = shell_exec(getenv('PHP_AUTOCONF') . ' --version');$/;"	v
b	run-tests.php	/^	$b = test_name($b);$/;"	v
b2hex	molten_util.c	/^void b2hex(char **output, const unsigned char *input, int input_len)$/;"	f
ba_type	molten_span.h	/^enum ba_type {BA_NORMAL, BA_SA, BA_SA_HOST, BA_SA_IP, BA_SA_DSN, BA_ERROR, BA_PATH};$/;"	g
bin2hex64	molten_util.c	/^void bin2hex64(char **output, const uint64_t *input) $/;"	f
bin_env	run-tests.php	/^	$bin_env = array();$/;"	v
bork_info	run-tests.php	/^						$bork_info = "could not load --" . $key . "-- " . dirname($file) . '\/' . trim($section_text[$key]);$/;"	v
bork_info	run-tests.php	/^				$bork_info = "Can't redirect a test from within a redirected test";$/;"	v
bork_info	run-tests.php	/^				$bork_info = "duplicated $section section";$/;"	v
bork_info	run-tests.php	/^				$bork_info = "missing section --EXPECT--, --EXPECTF-- or --EXPECTREGEX--";$/;"	v
bork_info	run-tests.php	/^				$bork_info = "missing section --FILE--";$/;"	v
bork_info	run-tests.php	/^			$bork_info = "Redirect info must contain exactly one TEST string to be used as redirect directory.";$/;"	v
bork_info	run-tests.php	/^			$bork_info = "cannot read test";$/;"	v
bork_info	run-tests.php	/^		$bork_info = "Redirected test did not contain redirection info";$/;"	v
bork_info	run-tests.php	/^		$bork_info = "empty test [$file]";$/;"	v
bork_info	run-tests.php	/^		$bork_info = "tests must start with --TEST-- [$file]";$/;"	v
bork_info	run-tests.php	/^	$bork_info = '';$/;"	v
borked	run-tests.php	/^						$borked = true;$/;"	v
borked	run-tests.php	/^				$borked    = true;$/;"	v
borked	run-tests.php	/^				$borked = false;$/;"	v
borked	run-tests.php	/^				$borked = true;$/;"	v
borked	run-tests.php	/^			$borked = true;$/;"	v
borked	run-tests.php	/^		$borked = true;$/;"	v
borked	run-tests.php	/^	$borked = false;$/;"	v
brokers	molten_log.h	/^    char *brokers;              \/* brokers *\/$/;"	m	struct:__anon13
buf	molten_log.h	/^    char *buf;$/;"	m	struct:__anon13
bug	run-tests.php	/^		$bug = "0$bug";$/;"	v
bug	run-tests.php	/^	$bug = (int)$bug; \/\/ Many distros make up their own versions$/;"	v
build_com_record	molten_intercept.c	/^static zval *build_com_record(mo_interceptor_t *pit, mo_frame_t *frame, int add_args)$/;"	f	file:
build_curl_bannotation	molten_intercept.c	/^void build_curl_bannotation(zval *span, long timestamp, mo_interceptor_t *pit, zval *handle, char *method, zend_bool check_error) $/;"	f
build_span_id_func	molten_span.h	/^typedef void (*build_span_id_func)(char **span_id, char *parent_span_id, int span_count);$/;"	t
build_span_id_level	molten_util.c	/^void build_span_id_level(char **span_id, char *parent_span_id, int span_count)$/;"	f
build_span_id_random	molten_util.c	/^void build_span_id_random(char **span_id, char *parent_span_id, int span_count)$/;"	f
builddir	Makefile	/^builddir = \/root\/source\/molten\/Molten$/;"	m
bulk	tests/change_span_id.php	/^$bulk = new MongoDB\\Driver\\BulkWrite();$/;"	v
bulk	tests/molten_008.php	/^    $bulk = new MongoDB\\Driver\\BulkWrite();$/;"	v
bulk	tests/molten_008.php	/^$bulk = new MongoDB\\Driver\\BulkWrite();$/;"	v
bulk	tests/molten_ot.php	/^    $bulk = new MongoDB\\Driver\\BulkWrite();$/;"	v
bulk	tests/molten_ot.php	/^$bulk = new MongoDB\\Driver\\BulkWrite();$/;"	v
c	example/curl.php	/^$c=curl_init("http:\/\/localhost:12345");$/;"	v
c1	run-tests.php	/^			$c1 = @count_array_diff($ar1, $ar2, $is_reg, $w, $idx1+1, $idx2, $cnt1, $cnt2, 10);$/;"	v
c2	run-tests.php	/^			$c2 = @count_array_diff($ar1, $ar2, $is_reg, $w, $idx1, $idx2+1, $cnt1,  $cnt2, 10);$/;"	v
capture_func	molten_intercept.h	/^typedef void (*capture_func)(mo_interceptor_t *pit, mo_frame_t *frame);$/;"	t
cc_status	run-tests.php	/^				$cc_status = 0;$/;"	v
cfg	run-tests.php	/^$cfg = array();$/;"	v
cfgfiles	run-tests.php	/^$cfgfiles = array('skip', 'php', 'clean', 'out', 'diff', 'exp');$/;"	v
cfgtypes	run-tests.php	/^$cfgtypes = array('show', 'keep');$/;"	v
ch	example/http_request.php	/^$ch = curl_init($url1);$/;"	v
ch	example/server.php	/^$ch = curl_init($url1);$/;"	v
ch	tests/change_span_id.php	/^$ch = curl_init($url1);$/;"	v
ch	tests/molten_011.php	/^$ch = curl_init($url1);$/;"	v
ch	tests/molten_011.php	/^$ch = curl_init($url2);$/;"	v
ch	tests/molten_ot.php	/^$ch = curl_init($url1);$/;"	v
ch	tests/molten_ot.php	/^$ch = curl_init($url2);$/;"	v
ch	tests/molten_ot.php	/^$ch = curl_init($url3);$/;"	v
ch1	tests/molten_ot.php	/^$ch1 = curl_init($url . '?ch1=1&reflect=1');$/;"	v
ch2	tests/molten_ot.php	/^$ch2 = curl_init($url . '?ch2=1&reflect=1');$/;"	v
chain_header_key	molten_struct.h	/^    HashTable *chain_header_key;        \/* chain uri key*\/$/;"	m	struct:__anon19
chain_log_path	php_molten.h	/^    char                    *chain_log_path;        \/* chain log path *\/$/;"	v
change_time	molten_ctrl.h	/^    long        change_time;$/;"	m	struct:__anon6
check_hit_ratio	molten_util.c	/^int check_hit_ratio(long base)$/;"	f
check_interval	molten_report.c	/^static int inline check_interval(mo_report_t *pre, long usec)$/;"	f	file:
clean_params	run-tests.php	/^				$clean_params = array();$/;"	v
cmd	example/server.php	/^		$cmd = "exec {$php_executable} -t {$doc_root} -n -d extension=molten.so -d molten.enable=1 -d molten.sink_type=4 -d molten.sink_http_uri=http:\/\/127.0.0.1:9411\/api\/v1\/spans -d molten.service_name={$sn} -d molten.sampling_rate_base=1  -S " . $address;$/;"	v
cmd	example/server.php	/^		$cmd = "{$php_executable} -t {$doc_root} -n -S " . $address;$/;"	v
cmd	run-tests.php	/^			$cmd = "valgrind -q --tool=memcheck --trace-children=yes --log-file-exactly=$memcheck_filename $cmd";$/;"	v
cmd	run-tests.php	/^			$cmd = "valgrind -q --tool=memcheck --trace-children=yes --log-file=$memcheck_filename $cmd";$/;"	v
cmd	run-tests.php	/^		$cmd = "$php $pass_options $ini_settings -f \\"$test_file\\" $args 2>&1";$/;"	v
cmd	run-tests.php	/^		$cmd = "$php $pass_options $ini_settings -f \\"$test_file\\" 2>&1 < \\"$tmp_post\\"";$/;"	v
cmd	run-tests.php	/^        $cmd = "$php $pass_options $ini_settings -f \\"$test_file\\" 2>&1 < \\"$tmp_post\\"";$/;"	v
code	run-tests.php	/^	$code = proc_close($proc);$/;"	v
comp_line	run-tests.php	/^function comp_line($l1, $l2, $is_reg)$/;"	f
compiler	run-tests.php	/^						$compiler = shell_exec(getenv('CC') . " $flag 2>&1");$/;"	v
compression	run-tests.php	/^$compression = 0;$/;"	v
compute_summary	run-tests.php	/^function compute_summary()$/;"	f
conf_passed	run-tests.php	/^					$conf_passed = $argv[++$i];$/;"	v
conf_passed	run-tests.php	/^$conf_passed = null;$/;"	v
content_length	run-tests.php	/^		$content_length = strlen($post);$/;"	v
content_length	run-tests.php	/^        $content_length = strlen($post);$/;"	v
content_type	molten_struct.h	/^    const char *content_type;$/;"	m	struct:mo_chain_st
convert_args_to_string	molten_intercept.c	/^static char *convert_args_to_string(mo_frame_t *frame)$/;"	f	file:
copy_file	run-tests.php	/^		$copy_file     = $temp_dir . DIRECTORY_SEPARATOR . basename(is_array($file) ? $file[1] : $file) . '.phps';$/;"	v
count_array_diff	run-tests.php	/^function count_array_diff($ar1, $ar2, $is_reg, $w, $idx1, $idx2, $cnt1, $cnt2, $steps)$/;"	f
curl_header_internel_call	molten_intercept.h	/^    int curl_header_internel_call;$/;"	m	struct:__anon10
curl_header_record	molten_intercept.h	/^    zval *curl_header_record;               \/* record curl handler set header *\/$/;"	m	struct:__anon10
curl_http_header_const	molten_intercept.h	/^    zval        curl_http_header_const;            \/* curl add header const *\/$/;"	m	struct:__anon10
curl_multi_add_handle_record	molten_intercept.c	/^static void curl_multi_add_handle_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
curl_multi_remove_handle_record	molten_intercept.c	/^static void curl_multi_remove_handle_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
cwd	run-tests.php	/^$cwd = getcwd();$/;"	v
data	example/http_request.php	/^$data = curl_exec($ch);$/;"	v
data	example/server.php	/^$data = curl_exec($ch);$/;"	v
data	run-tests.php	/^	$data = "php_test_data=" . urlencode(base64_encode(str_replace("\\00", '[0x0]', $data)));$/;"	v
data	run-tests.php	/^	$data = '';$/;"	v
data	tests/change_span_id.php	/^$data = curl_exec($ch);$/;"	v
data	tests/molten_011.php	/^$data = curl_exec($ch);$/;"	v
data	tests/molten_ot.php	/^$data = curl_exec($ch);$/;"	v
data_length	run-tests.php	/^	$data_length = strlen($data);$/;"	v
db_query_get_sa	molten_intercept.c	/^static void db_query_get_sa(mo_interceptor_t *pit, mo_frame_t *frame, int procedural, zval *span)$/;"	f	file:
db_query_record	molten_intercept.c	/^static void db_query_record(mo_interceptor_t *pit, mo_frame_t *frame, int procedural)$/;"	f	file:
descriptorspec	example/server.php	/^	$descriptorspec = array($/;"	v
destroy_span_context	molten_span.c	/^void destroy_span_context(mo_stack *stack)$/;"	f
diff	run-tests.php	/^			$diff = "# original source file: $shortname\\n" . $diff;$/;"	v
diff	run-tests.php	/^			$diff = "&nbsp;";$/;"	v
diff	run-tests.php	/^			$diff = "<a href='$url'>diff<\/a>";$/;"	v
diff	run-tests.php	/^		$diff = generate_diff($wanted, $wanted_re, $output);$/;"	v
diff	run-tests.php	/^	$diff = array();$/;"	v
diff	run-tests.php	/^	$diff = empty($diff) ? '' : preg_replace('\/\\e\/', '<esc>', $diff);$/;"	v
diff	run-tests.php	/^	$diff = generate_array_diff($r, $o, !is_null($wanted_re), $w);$/;"	v
diff_filename	run-tests.php	/^	$diff_filename     = $temp_dir . DIRECTORY_SEPARATOR . $main_file_name . 'diff';$/;"	v
doc_root	example/server.php	/^	$doc_root = __DIR__;$/;"	v
dr_msg_cb	molten_log.c	/^static void dr_msg_cb(rd_kafka_t *rk, const rd_kafka_message_t *rkmessage, void *opaque)$/;"	f	file:
dtor	common/molten_stack.h	/^    stack_dtor_func dtor;$/;"	m	struct:__anon5
e	run-tests.php	/^			$e = explode('=', trim($e), 2);$/;"	v
e	run-tests.php	/^		$e = null;$/;"	v
e_path	tests/molten_011.php	/^$e_path = 'http:\/\/' . $hostname . ':' . '8960';$/;"	v
elements	common/molten_stack.h	/^    void *elements;$/;"	m	struct:__anon5
elements	molten_intercept.h	/^    HashTable   *elements;$/;"	m	struct:__anon10
enable	molten_ctrl.h	/^    uint8_t     enable;$/;"	m	struct:__anon6
enable	php_molten.h	/^    zend_bool               enable;$/;"	v
enable_sapi	php_molten.h	/^    zend_bool               enable_sapi;            \/* enable_sapi *\/$/;"	v
end	run-tests.php	/^						$end = $start = $length;$/;"	v
end	run-tests.php	/^					$end = strpos($wanted_re, $r, $start+2);$/;"	v
end_time	run-tests.php	/^		$end_time = time();$/;"	v
end_time	run-tests.php	/^$end_time = time();$/;"	v
entry_time	molten_struct.h	/^    int64_t         entry_time;       \/* entry wall time *\/ $/;"	m	struct:__anon20
env	run-tests.php	/^function system_with_timeout($commandline, $env = null, $stdin = null)$/;"	v
environment	run-tests.php	/^$environment = isset($_ENV) ? $_ENV : array();$/;"	v
eq	run-tests.php	/^			$eq = @count_array_diff($ar1, $ar2, $is_reg, $w, $idx1, $ofs2, $cnt1, $cnt2, $st);$/;"	v
eq	run-tests.php	/^			$eq = @count_array_diff($ar1, $ar2, $is_reg, $w, $ofs1, $idx2, $cnt1, $cnt2, $st);$/;"	v
eq1	run-tests.php	/^				$eq1 = $eq;$/;"	v
eq1	run-tests.php	/^		$eq1 = 0;$/;"	v
eq2	run-tests.php	/^				$eq2 = $eq;$/;"	v
eq2	run-tests.php	/^		$eq2 = 0;$/;"	v
equal	run-tests.php	/^	$equal = 0;$/;"	v
error	molten_report.h	/^    char *error;                \/* error message (truncate) *\/$/;"	m	struct:__anon14
error	run-tests.php	/^function error($message)$/;"	f
error_list	molten_report.h	/^    zend_llist      error_list;                 \/* zend error *\/$/;"	m	struct:__anon15
error_list	molten_struct.h	/^    zval *error_list;$/;"	m	struct:mo_chain_st
error_report	run-tests.php	/^function error_report($testname, $logname, $tested)$/;"	f
escaped_details	run-tests.php	/^	$escaped_details = htmlspecialchars($details, ENT_QUOTES, 'UTF-8');$/;"	v
escaped_details	run-tests.php	/^	$escaped_details = preg_replace_callback('\/[\\0-\\x08\\x0B\\x0C\\x0E-\\x1F]\/', function ($c) {$/;"	v
escaped_message	run-tests.php	/^	$escaped_message = htmlspecialchars($message, ENT_QUOTES, 'UTF-8');$/;"	v
escaped_test_name	run-tests.php	/^    $escaped_test_name = basename($file_name) . ' - ' . htmlspecialchars($test_name, ENT_QUOTES);$/;"	v
exec_prefix	Makefile	/^exec_prefix = $(prefix)$/;"	m
execute_begin_time	molten_struct.h	/^    long execute_begin_time;            \/* execute begin time *\/$/;"	m	struct:mo_chain_st
execute_begin_time	php_molten.h	/^    long                    execute_begin_time;     \/* execute begin time *\/$/;"	v
execute_end_time	molten_struct.h	/^    long execute_end_time;              \/* execute end time *\/$/;"	m	struct:mo_chain_st
exit_time	molten_struct.h	/^    int64_t         exit_time;        \/* exit wall time *\/$/;"	m	struct:__anon20
exp_filename	run-tests.php	/^	$exp_filename      = $temp_dir . DIRECTORY_SEPARATOR . $main_file_name . 'exp';$/;"	v
ext	run-tests.php	/^	foreach($info_params_ex as $ext => $ini_overwrites_ex) {$/;"	v
ext_dir	run-tests.php	/^		$ext_dir=`$php -r 'echo ini_get("extension_dir");'`;$/;"	v
extension_loaded	molten_intercept.c	/^static int extension_loaded(char *extension_name)$/;"	f	file:
extensions	run-tests.php	/^		$extensions = preg_split("\/[\\n\\r]+\/", trim($section_text['EXTENSIONS']));$/;"	v
extra	run-tests.php	/^				$extra = "skipif";$/;"	v
extra	run-tests.php	/^				$extra = substr(PHP_OS, 0, 3) !== "WIN" ?$/;"	v
extra	run-tests.php	/^			$extra = "&nbsp;";$/;"	v
extra	run-tests.php	/^			$extra = "<a href='$url'>$extra<\/a>";$/;"	v
extra	run-tests.php	/^			$extra = substr(PHP_OS, 0, 3) !== "WIN" ?$/;"	v
extra	run-tests.php	/^function show_result($result, $tested, $tested_file, $extra = '', $temp_filenames = null)$/;"	v
exts_skipped	run-tests.php	/^$exts_skipped = 0;$/;"	v
exts_tested	run-tests.php	/^$exts_tested = count($exts_to_test);$/;"	v
exts_to_test	run-tests.php	/^	$exts_to_test = explode(',',`$php $pass_options $info_params "$info_file"`);$/;"	v
exts_to_test	run-tests.php	/^$exts_to_test = array();$/;"	v
failed_headers	run-tests.php	/^				$failed_headers = true;$/;"	v
failed_headers	run-tests.php	/^	$failed_headers = false;$/;"	v
failed_test_summary	run-tests.php	/^	$failed_test_summary = '';$/;"	v
failed_tests_data	run-tests.php	/^			$failed_tests_data = '';$/;"	v
failed_tests_file	run-tests.php	/^					$failed_tests_file = fopen($argv[++$i], 'a+t');$/;"	v
failed_tests_file	run-tests.php	/^					$failed_tests_file = fopen($argv[++$i], 'w+t');$/;"	v
failed_tests_file	run-tests.php	/^$failed_tests_file= false;$/;"	v
fd	common/molten_lock.h	/^    int fd;$/;"	m	struct:__anon1
fd	molten_log.h	/^    int fd;$/;"	m	struct:__anon13
file	run-tests.php	/^			$file = $org_file[0];$/;"	v
file	run-tests.php	/^		$file = $file[0];$/;"	v
filename_copy	run-tests.php	/^function save_text($filename, $text, $filename_copy = null)$/;"	v
find_files	run-tests.php	/^function find_files($dir, $is_ext_dir = false, $ignore = false)$/;"	f
find_server_var	molten_util.h	/^static int find_server_var(char *key, int key_size, void **ret) $/;"	f
flags	molten_struct.h	/^    mo_chain_key_t *flags;              \/* flags *\/$/;"	m	struct:__anon19
flags	run-tests.php	/^				$flags = array('-v', '-V', '--version');$/;"	v
flush_log_to_fd	molten_log.c	/^static void inline flush_log_to_fd(mo_chain_log_t *log, char *bytes, int size)$/;"	f	file:
flush_log_to_syslog	molten_log.c	/^static void inline flush_log_to_syslog(mo_chain_log_t *log, char *bytes, int size)$/;"	f	file:
format	molten_log.h	/^    char *format; $/;"	m	struct:__anon13
format_llist_to_array	molten_report.c	/^void format_llist_to_array(smart_string *s, zend_llist *error_list)$/;"	f
fp	run-tests.php	/^		$fp = fopen("php:\/\/stdin", "r+");$/;"	v
fp	run-tests.php	/^	$fp = fopen($file, "rb") or error("Cannot open test file: $file");$/;"	v
frame_build	molten.c	/^static void frame_build(mo_frame_t *frame, zend_bool internal, unsigned char type, zend_execute_data *caller, zend_execute_data *ex, zend_op_array *op_array TSRMLS_DC)$/;"	f	file:
frame_destroy	molten.c	/^static void frame_destroy(mo_frame_t *frame)$/;"	f	file:
frame_set_retval	molten.c	/^static void frame_set_retval(mo_frame_t *frame, zend_bool internal, zend_execute_data *ex, zend_fcall_info *fci TSRMLS_DC)$/;"	f	file:
fs	run-tests.php	/^	$fs = fsockopen($host, $port, $errno, $errstr, 10);$/;"	v
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
function	molten_struct.h	/^    smart_string    function;         \/* function name *\/$/;"	m	struct:__anon20
generate_array_diff	run-tests.php	/^function generate_array_diff($ar1, $ar2, $is_reg, $w)$/;"	f
generate_diff	run-tests.php	/^function generate_diff($wanted, $wanted_re, $output)$/;"	f
generate_log_path	molten_log.c	/^static void generate_log_path(mo_chain_log_t *log)$/;"	f	file:
get_summary	run-tests.php	/^function get_summary($show_ext_summary, $show_html)$/;"	f
handle	example/server.php	/^		$handle = proc_open($cmd, $descriptorspec, $pipes, $doc_root);$/;"	v
handle	example/server.php	/^		$handle = proc_open(addslashes($cmd), $descriptorspec, $pipes, $doc_root, NULL, array("bypass_shell" => true,  "suppress_errors" => true));$/;"	v
hash_destroy_cb	molten_intercept.c	/^static void hash_destroy_cb(void *pDest)$/;"	f	file:
header	example/response.php	/^$header = 'HTTP_X_W_';$/;"	v
header	tests/molten_ot.php	/^$header = ["test321:testheaderwecansee"];$/;"	v
header	tool/response.php	/^$header = 'HTTP_X_W_';$/;"	v
headers	run-tests.php	/^				$headers = $org_headers[$k];$/;"	v
headers	run-tests.php	/^		$headers = array();$/;"	v
headers	run-tests.php	/^	$headers = "";$/;"	v
host	run-tests.php	/^		$host = $proxy['host'];$/;"	v
host	run-tests.php	/^		$host = $url_bits['host'];$/;"	v
host_name	molten_log.h	/^    char *host_name;            \/* link to global host name *\/$/;"	m	struct:__anon13
host_name	php_molten.h	/^    char                    host_name[HOST_NAME_MAX];   \/* host name *\/$/;"	v
hostname	tests/change_span_id.php	/^$hostname = 'localhost';$/;"	v
hostname	tests/molten_011.php	/^$hostname = 'localhost';$/;"	v
hostname	tests/molten_ot.php	/^$hostname = 'localhost';$/;"	v
html_file	run-tests.php	/^					$html_file = fopen($argv[++$i], 'wt');$/;"	v
html_file	run-tests.php	/^$html_file = null;$/;"	v
html_output	run-tests.php	/^					$html_output = is_resource($html_file);$/;"	v
html_output	run-tests.php	/^$html_output = false;$/;"	v
i	example/server.php	/^    $i = 0;$/;"	v
idx1	run-tests.php	/^	$idx1 = 0; $ofs1 = 0; $cnt1 = @count($ar1);$/;"	v
idx2	run-tests.php	/^	$idx2 = 0; $ofs2 = 0; $cnt2 = @count($ar2);$/;"	v
ignored_by_ext	run-tests.php	/^$ignored_by_ext = 0;$/;"	v
in_request	php_molten.h	/^    zend_bool               in_request;             \/* determine in requeset life time *\/$/;"	v
index	run-tests.php	/^			$index = "# $name[1]: $name[0]";$/;"	v
index	run-tests.php	/^			$index = "# $redir_tested: $name";$/;"	v
index	run-tests.php	/^			$index = $name;$/;"	v
info	run-tests.php	/^					$info = " (info: $m[1])";$/;"	v
info	run-tests.php	/^					$info = " (warn: $m[1])";$/;"	v
info	run-tests.php	/^					$info = " (warn: XFAIL section but test passes)";$/;"	v
info	run-tests.php	/^			$info = '  XFAIL REASON: ' . rtrim($section_text['XFAIL']);$/;"	v
info	run-tests.php	/^	$info = '';$/;"	v
info_file	run-tests.php	/^	$info_file = __DIR__ . '\/run-test-info.php';$/;"	v
info_params	run-tests.php	/^	$info_params = array();$/;"	v
info_params_ex	run-tests.php	/^	$info_params_ex = array($/;"	v
ini_overwrites	run-tests.php	/^			$ini_overwrites = array_merge($ini_overwrites, $ini_overwrites_ex);$/;"	v
ini_overwrites	run-tests.php	/^$ini_overwrites = array($/;"	v
ini_settings	run-tests.php	/^	$ini_settings = $settings;$/;"	v
ini_settings	run-tests.php	/^	$ini_settings = array();$/;"	v
init	common/molten_shm.h	/^    int                 init;$/;"	m	struct:__anon3
init	common/molten_shm.h	/^    int             init;$/;"	m	struct:__anon2
init_lock	common/molten_shm.h	/^    mo_fcntl_lock_t     init_lock;      \/* molten status lock for init *\/ $/;"	m	struct:__anon4
init_span_context	molten_span.c	/^void init_span_context(mo_stack *stack)$/;"	f
ino	molten_log.h	/^    ino_t ino;$/;"	m	struct:__anon13
install_targets	Makefile	/^install_targets = install-modules install-headers$/;"	m
ip	molten_struct.h	/^    char ip[INET_ADDRSTRLEN];           \/* device ip *\/$/;"	m	struct:__anon19
ip	php_molten.h	/^    char                    ip[INET_ADDRSTRLEN];    \/* device ip *\/$/;"	v
is_cli	molten_struct.h	/^    zend_bool is_cli;$/;"	m	struct:mo_chain_st
is_ext_dir	run-tests.php	/^function find_files($dir, $is_ext_dir = false, $ignore = false)$/;"	v
is_pass	molten_struct.h	/^    zend_bool is_pass;$/;"	m	struct:__anon18
is_sampled	molten_struct.h	/^    int is_sampled;                     \/* is sampled *\/$/;"	m	struct:__anon19
is_switch	run-tests.php	/^								$is_switch = false;$/;"	v
is_switch	run-tests.php	/^				$is_switch = true;$/;"	v
is_switch	run-tests.php	/^			$is_switch = true;$/;"	v
is_switch	run-tests.php	/^		$is_switch = false;$/;"	v
join_ori_url	molten_util.h	/^static inline zend_bool join_ori_url(smart_string *url, zend_bool trim_query_string)$/;"	f
junit_enabled	run-tests.php	/^function junit_enabled() {$/;"	f
junit_finish_timer	run-tests.php	/^function junit_finish_timer($file_name) {$/;"	f
junit_get_suite_xml	run-tests.php	/^function junit_get_suite_xml($suite_name = '') {$/;"	f
junit_get_suitename_for	run-tests.php	/^function junit_get_suitename_for($file_name) {$/;"	f
junit_get_timer	run-tests.php	/^function junit_get_timer($file_name) {$/;"	f
junit_init	run-tests.php	/^function junit_init() {$/;"	f
junit_init_suite	run-tests.php	/^function junit_init_suite($suite_name) {$/;"	f
junit_mark_test_as	run-tests.php	/^function junit_mark_test_as($type, $file_name, $test_name, $time = null, $message = '', $details = '') {$/;"	f
junit_path_to_classname	run-tests.php	/^function junit_path_to_classname($file_name) {$/;"	f
junit_save_xml	run-tests.php	/^function junit_save_xml() {$/;"	f
junit_start_timer	run-tests.php	/^function junit_start_timer($file_name) {$/;"	f
junit_suite_record	run-tests.php	/^function junit_suite_record($suite, $param, $value = 1) {$/;"	f
just_save_results	run-tests.php	/^					$just_save_results = true;$/;"	v
just_save_results	run-tests.php	/^		$just_save_results = (strtolower($user_input[0]) == 's');$/;"	v
just_save_results	run-tests.php	/^$just_save_results = false;$/;"	v
k	run-tests.php	/^		foreach($want as $k => $v) {$/;"	v
k1	run-tests.php	/^			$k1 = next($old1) ? key($old1) : null;$/;"	v
k1	run-tests.php	/^		} else if ($k2 == $l2 + 1 || $k1 === null) {$/;"	v
k1	run-tests.php	/^	reset($old1); $k1 = key($old1); $l1 = -2;$/;"	v
k2	run-tests.php	/^			$k2 = next($old2) ? key($old2) : null;$/;"	v
k2	run-tests.php	/^		if ($k1 == $l1 + 1 || $k2 === null) {$/;"	v
k2	run-tests.php	/^	reset($old2); $k2 = key($old2); $l2 = -2;$/;"	v
key	run-tests.php	/^				$key = $prefix . '_EXTERNAL';$/;"	v
key	run-tests.php	/^	foreach((array)$env as $key => $value) {$/;"	v
key	run-tests.php	/^foreach ($exts_to_test as $key => $val) {$/;"	v
keyword	molten_intercept.h	/^    char *keyword;$/;"	m	struct:__anon11
l1	run-tests.php	/^			$l1 = $k1;$/;"	v
l2	run-tests.php	/^			$l2 = $k2;$/;"	v
last	run-tests.php	/^				$last = 1;$/;"	v
last	run-tests.php	/^				$last = 2;$/;"	v
last_min	molten_ctrl.h	/^    long last_min;                  \/* last min *\/$/;"	m	struct:__anon8
last_rep_time	molten_report.h	/^    long            last_rep_time;             \/* last report time sec *\/$/;"	m	struct:__anon15
last_req_time	molten_ctrl.h	/^    long        last_req_time;             \/* last request time microtime *\/$/;"	m	struct:__anon9
ldd	run-tests.php	/^				$ldd = shell_exec("ldd $php 2>\/dev\/null");$/;"	v
ldd	run-tests.php	/^			$ldd = $autoconf = $sys_libtool = $libtool = $compiler = 'N\/A';$/;"	v
leak_check	run-tests.php	/^					$leak_check = true;$/;"	v
leak_check	run-tests.php	/^$leak_check = false;$/;"	v
leaked	run-tests.php	/^		$leaked = filesize($memcheck_filename) > 0;$/;"	v
leaked	run-tests.php	/^	$leaked = false;$/;"	v
len	run-tests.php	/^				$len = strlen($value);$/;"	v
lenght	common/molten_shm.h	/^    int             lenght;$/;"	m	struct:__anon2
length	run-tests.php	/^			$length = strlen($wanted_re);$/;"	v
level	molten_struct.h	/^    uint32_t        level;            \/* nesting level *\/$/;"	m	struct:__anon20
level	php_molten.h	/^    int                     level;$/;"	v
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libtool	run-tests.php	/^				$libtool = shell_exec($CUR_DIR . '\/libtool --version');$/;"	v
line	run-tests.php	/^				$line = explode(':', $line, 2);$/;"	v
line	run-tests.php	/^			$line = fread($pipes[1], 8192);$/;"	v
line	run-tests.php	/^		$line = fgets($fp);$/;"	v
line_length	run-tests.php	/^	$line_length = strlen($str);$/;"	v
lines	run-tests.php	/^		$lines = preg_split("\/[\\n\\r]+\/", $section_text['EXPECTHEADERS']);$/;"	v
llist_apply_func	molten_report.c	/^static void llist_apply_func(void *data, void *arg)$/;"	f	file:
loaded	run-tests.php	/^		$loaded = explode(",", `$php -n -r 'echo join(",", get_loaded_extensions());'`);$/;"	v
lock_path	common/molten_lock.h	/^    char lock_path[LOCK_PATH_SIZE];$/;"	m	struct:__anon1
log_filename	run-tests.php	/^	$log_filename      = $temp_dir . DIRECTORY_SEPARATOR . $main_file_name . 'log';$/;"	v
log_format	run-tests.php	/^	$log_format = 'LEODS';$/;"	v
log_format	run-tests.php	/^	$log_format = strtoupper(getenv('TEST_PHP_LOG_FORMAT'));$/;"	v
logname	run-tests.php	/^	$logname  = realpath($logname);$/;"	v
magic	common/molten_shm.h	/^    int                 magic;$/;"	m	struct:__anon3
magic	common/molten_shm.h	/^    int             magic;$/;"	m	struct:__anon2
mail_qa_team	run-tests.php	/^function mail_qa_team($data, $compression, $status = false)$/;"	f
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	config.guess	/^main ()$/;"	f
main	tool/ctrl.c	/^int main(void)$/;"	f
main_file_name	run-tests.php	/^	$main_file_name = basename($file,'phpt');$/;"	v
manager	tests/change_span_id.php	/^$manager = new MongoDB\\Driver\\Manager("mongodb:\/\/localhost:27017");$/;"	v
manager	tests/molten_008.php	/^$manager = new MongoDB\\Driver\\Manager("mongodb:\/\/localhost:27017");$/;"	v
manager	tests/molten_ot.php	/^$manager = new MongoDB\\Driver\\Manager("mongodb:\/\/localhost:27017");$/;"	v
matches	run-tests.php	/^							$matches = array();$/;"	v
max	common/molten_stack.h	/^    int size, top, max;$/;"	m	struct:__anon5
mcm	molten_ctrl.h	/^    mo_ctrm_t   *mcm;                      \/* ctrol module *\/$/;"	m	struct:__anon9
mem	run-tests.php	/^			$mem = "&nbsp;";$/;"	v
mem	run-tests.php	/^			$mem = "<a href='$url'>leaks<\/a>";$/;"	v
mem	tests/molten_007.php	/^$mem = new Memcached();$/;"	v
mem	tests/molten_013.php	/^$mem = new Memcached();$/;"	v
mem	tests/molten_ot.php	/^$mem = new Memcached();$/;"	v
memcached_add_server_record	molten_intercept.c	/^static void memcached_add_server_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
memcached_add_servers_record	molten_intercept.c	/^static void memcached_add_servers_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
memcached_common_call	molten_intercept.c	/^static void memcached_common_call(mo_interceptor_t *pit, mo_frame_t *frame, zval *span)$/;"	f	file:
memcached_common_record	molten_intercept.c	/^static void memcached_common_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
memcheck_filename	run-tests.php	/^	$memcheck_filename = $temp_dir . DIRECTORY_SEPARATOR . $main_file_name . 'mem';$/;"	v
message	run-tests.php	/^				$message = !empty($m[1]) ? $m[1] : '';$/;"	v
message	run-tests.php	/^		$message = "ext\/zlib required";$/;"	v
method	molten_struct.h	/^    const char *method;$/;"	m	struct:mo_chain_st
mh	tests/molten_ot.php	/^$mh = curl_multi_init();$/;"	v
mkinstalldirs	Makefile	/^mkinstalldirs = $(top_srcdir)\/build\/shtool mkdir -p$/;"	m
mm	common/molten_shm.h	/^    void                *mm;            \/* alloc memory *\/$/;"	m	struct:__anon4
mo_add_assoc_string	php7_wrapper.h	199;"	d
mo_add_assoc_string	php7_wrapper.h	65;"	d
mo_add_next_index_string	php7_wrapper.h	187;"	d
mo_add_next_index_string	php7_wrapper.h	66;"	d
mo_build_chain_header	molten_chain.c	/^void mo_build_chain_header(mo_chain_t *pct, mo_span_builder *psb, char *ip)$/;"	f
mo_call_user_function	php7_wrapper.h	/^static inline int mo_call_user_function(HashTable *ht, zval **obj, zval *function_name, zval *retval_ptr, uint32_t param_count, zval **params) $/;"	f
mo_call_user_function	php7_wrapper.h	71;"	d
mo_chain_add_span	molten_log.c	/^void mo_chain_add_span(mo_chain_log_t *log, zval *span)$/;"	f
mo_chain_ctor	molten_chain.c	/^void mo_chain_ctor(mo_chain_t *pct, mo_chain_log_t *pcl, mo_span_builder *psb, mo_stack *span_stack, char *service_name, char *ip)$/;"	f
mo_chain_dtor	molten_chain.c	/^void mo_chain_dtor(mo_chain_t *pct, mo_span_builder *psb, mo_stack *span_stack)$/;"	f
mo_chain_header_dtor	molten_chain.c	/^void mo_chain_header_dtor(mo_chain_header_t *pch)$/;"	f
mo_chain_header_t	molten_struct.h	/^} mo_chain_header_t;$/;"	t	typeref:struct:__anon19
mo_chain_key_t	molten_struct.h	/^} mo_chain_key_t;$/;"	t	typeref:struct:__anon18
mo_chain_log_add	molten_log.c	/^void mo_chain_log_add(mo_chain_log_t *log, char *buf, size_t size)$/;"	f
mo_chain_log_ctor	molten_log.c	/^void mo_chain_log_ctor(mo_chain_log_t *log, char *host_name, char *log_path, long sink_type, long output_type, char *post_uri, char *syslog_unix_socket)$/;"	f
mo_chain_log_dtor	molten_log.c	/^void mo_chain_log_dtor(mo_chain_log_t *log)$/;"	f
mo_chain_log_flush	molten_log.c	/^void mo_chain_log_flush(mo_chain_log_t *log)$/;"	f
mo_chain_log_init	molten_log.c	/^void mo_chain_log_init(mo_chain_log_t *log)$/;"	f
mo_chain_log_t	molten_log.h	/^} mo_chain_log_t;$/;"	t	typeref:struct:__anon13
mo_chain_st	molten_struct.h	/^typedef struct mo_chain_st {$/;"	s
mo_chain_t	molten_struct.h	/^} mo_chain_t;$/;"	t	typeref:struct:mo_chain_st
mo_create_slot	common/molten_shm.c	/^unsigned char *mo_create_slot(mo_shm_t *msm, int slot, unsigned char *data, int size)$/;"	f
mo_ctrl_ctor	molten_ctrl.c	/^int mo_ctrl_ctor(mo_ctrl_t *prt, mo_shm_t *msm, char *notify_uri, char *ip, long sampling_type, long sampling_rate, long sampling_request)$/;"	f
mo_ctrl_dtor	molten_ctrl.c	/^void mo_ctrl_dtor(mo_ctrl_t *prt)$/;"	f
mo_ctrl_record	molten_ctrl.c	/^void mo_ctrl_record(mo_ctrl_t *mrt, int is_sampled)$/;"	f
mo_ctrl_sampling	molten_ctrl.c	/^void mo_ctrl_sampling(mo_ctrl_t *prt, mo_chain_t *pct)$/;"	f
mo_ctrl_serialize_msg	molten_ctrl.c	/^void mo_ctrl_serialize_msg(mo_ctrl_t *mrt, char **buf)$/;"	f
mo_ctrl_t	molten_ctrl.h	/^} mo_ctrl_t;            $/;"	t	typeref:struct:__anon9
mo_ctrl_update_sampling	molten_ctrl.c	/^int mo_ctrl_update_sampling(char *rec, mo_ctrm_t *mcm)$/;"	f
mo_ctrm_t	molten_ctrl.h	/^} mo_ctrm_t;$/;"	t	typeref:struct:__anon6
mo_execute	molten.c	/^ZEND_API void mo_execute(zend_op_array *op_array TSRMLS_DC)$/;"	f
mo_execute_core	molten.c	/^ZEND_API void mo_execute_core(int internal, zend_execute_data *execute_data, zend_op_array *op_array, int rvu TSRMLS_DC)$/;"	f
mo_execute_ex	molten.c	/^ZEND_API void mo_execute_ex(zend_execute_data *execute_data TSRMLS_DC)$/;"	f
mo_execute_ex	molten.c	/^ZEND_API void mo_execute_ex(zend_execute_data *execute_data)$/;"	f
mo_execute_internal	molten.c	/^ZEND_API void mo_execute_internal(zend_execute_data *execute_data, int return_value_used TSRMLS_DC)$/;"	f
mo_execute_internal	molten.c	/^ZEND_API void mo_execute_internal(zend_execute_data *execute_data, zend_fcall_info *fci, int return_value_used TSRMLS_DC)$/;"	f
mo_execute_internal	molten.c	/^ZEND_API void mo_execute_internal(zend_execute_data *execute_data, zval *return_value)$/;"	f
mo_fcntl_call	common/molten_lock.c	/^static int mo_fcntl_call(int fd, int cmd, int type, off_t offset, int whence, off_t len) $/;"	f	file:
mo_fcntl_locK_init	common/molten_lock.c	/^int mo_fcntl_locK_init(mo_fcntl_lock_t *lock)$/;"	f
mo_fcntl_lock_destroy	common/molten_lock.c	/^int mo_fcntl_lock_destroy(mo_fcntl_lock_t *lock)$/;"	f
mo_fcntl_lock_t	common/molten_lock.h	/^} mo_fcntl_lock_t;$/;"	t	typeref:struct:__anon1
mo_fcntl_wlock	common/molten_lock.c	/^void mo_fcntl_wlock(mo_fcntl_lock_t *lock)$/;"	f
mo_fcntl_wunlock	common/molten_lock.c	/^void mo_fcntl_wunlock(mo_fcntl_lock_t *lock)$/;"	f
mo_frame_t	molten_struct.h	/^} mo_frame_t;$/;"	t	typeref:struct:__anon20
mo_http_sink_t	molten_log.h	/^} mo_http_sink_t;$/;"	t	typeref:struct:__anon12
mo_init_chain_header	molten_chain.c	/^void mo_init_chain_header(mo_chain_header_t *pch)$/;"	f
mo_intercept_ctor	molten_intercept.c	/^void mo_intercept_ctor(mo_interceptor_t *pit, struct mo_chain_st *pct, mo_span_builder *psb)$/;"	f
mo_intercept_dtor	molten_intercept.c	/^void mo_intercept_dtor(mo_interceptor_t *pit)$/;"	f
mo_intercept_hit	molten_intercept.c	/^zend_bool mo_intercept_hit(mo_interceptor_t *pit, mo_interceptor_ele_t **eleDest, char *class_name, char *function_name)$/;"	f
mo_intercept_init	molten_intercept.c	/^void mo_intercept_init(mo_interceptor_t *pit)$/;"	f
mo_intercept_uninit	molten_intercept.c	/^void mo_intercept_uninit(mo_interceptor_t *pit)$/;"	f
mo_interceptor_ele_t	molten_intercept.h	/^}mo_interceptor_ele_t;$/;"	t	typeref:struct:__anon11
mo_interceptor_t	molten_intercept.h	/^}mo_interceptor_t;$/;"	t	typeref:struct:__anon10
mo_key_destory_func	molten_chain.c	/^static void mo_key_destory_func(void *pDest)$/;"	f	file:
mo_key_destory_func	molten_chain.c	/^static void mo_key_destory_func(zval *pDest)$/;"	f	file:
mo_lock_attr	common/molten_lock.c	/^pthread_rwlockattr_t    mo_lock_attr;$/;"	v
mo_lock_create	common/molten_lock.c	/^int mo_lock_create(mo_lock_t *lock)$/;"	f
mo_lock_destroy	common/molten_lock.c	/^int mo_lock_destroy(mo_lock_t *lock)$/;"	f
mo_lock_init	common/molten_lock.c	/^int mo_lock_init()$/;"	f
mo_lock_rlock	common/molten_lock.c	/^void mo_lock_rlock(mo_lock_t *lock)$/;"	f
mo_lock_runlock	common/molten_lock.c	/^void mo_lock_runlock(mo_lock_t *lock)$/;"	f
mo_lock_t	common/molten_lock.h	/^typedef pthread_rwlock_t    mo_lock_t;$/;"	t
mo_lock_t	common/molten_lock.h	/^typedef unsigned long       mo_lock_t;$/;"	t
mo_lock_wlock	common/molten_lock.c	/^void mo_lock_wlock(mo_lock_t *lock)$/;"	f
mo_lock_wunlock	common/molten_lock.c	/^void mo_lock_wunlock(mo_lock_t *lock)$/;"	f
mo_log_write	molten_log.c	/^void mo_log_write(mo_chain_log_t *log, char *bytes, int size) $/;"	f
mo_mkdir_recursive	molten_log.c	/^static int mo_mkdir_recursive(const char *dir)$/;"	f	file:
mo_obtain_local_ip	molten_chain.c	/^void mo_obtain_local_ip(char *ip)$/;"	f
mo_php_json_encode	php7_wrapper.h	/^static void inline mo_php_json_encode(smart_string *s, zval *z, int options)$/;"	f
mo_php_json_encode	php7_wrapper.h	35;"	d
mo_realse_slot	common/molten_shm.c	/^void mo_realse_slot(mo_shm_t *msm, int slot)$/;"	f
mo_reload_def	molten.c	/^} mo_reload_def;$/;"	t	typeref:struct:mo_reload_def_st	file:
mo_reload_def_st	molten.c	/^typedef struct mo_reload_def_st {$/;"	s	file:
mo_rep_ctor	molten_report.c	/^void mo_rep_ctor(mo_report_t *pre, long rep_interval, long report_limit)$/;"	f
mo_rep_dtor	molten_report.c	/^void mo_rep_dtor(mo_report_t *pre)$/;"	f
mo_rep_error_t	molten_report.h	/^} mo_rep_error_t;$/;"	t	typeref:struct:__anon14
mo_rep_record_data	molten_report.c	/^void mo_rep_record_data(mo_report_t *pre, mo_repi_t *pri, mo_chain_log_t *pcl, smart_string *uri, int is_sampled, long usec) $/;"	f
mo_rep_record_error	molten_report.c	/^void mo_rep_record_error(mo_report_t *pre, smart_string *uri, char *error_str, long usec)$/;"	f
mo_repi_t	molten_ctrl.h	/^} mo_repi_t;$/;"	t	typeref:struct:__anon7
mo_report_t	molten_report.h	/^} mo_report_t;            $/;"	t	typeref:struct:__anon15
mo_request_handle	molten_status.c	/^void mo_request_handle(mo_ctrl_t *mrt TSRMLS_DC)$/;"	f
mo_shm_ctor	common/molten_shm.c	/^void mo_shm_ctor(mo_shm_t *msm)$/;"	f
mo_shm_dtor	common/molten_shm.c	/^void mo_shm_dtor(mo_shm_t *msm)$/;"	f
mo_shm_t	common/molten_shm.h	/^} mo_shm_t;$/;"	t	typeref:struct:__anon4
mo_slot_header_t	common/molten_shm.h	/^} mo_slot_header_t;$/;"	t	typeref:struct:__anon3
mo_slot_t	common/molten_shm.h	/^} mo_slot_t;$/;"	t	typeref:struct:__anon2
mo_span_builder	molten_span.h	/^}mo_span_builder;$/;"	t	typeref:struct:__anon16
mo_span_context	molten_span.h	/^} mo_span_context;$/;"	t	typeref:struct:__anon17
mo_span_ctor	molten_span.h	/^static void inline mo_span_ctor(mo_span_builder *psb, char *span_format)$/;"	f
mo_sr_t	molten_ctrl.h	/^} mo_sr_t;$/;"	t	typeref:struct:__anon8
mo_stack	common/molten_stack.h	/^} mo_stack;$/;"	t	typeref:struct:__anon5
mo_stack_del_top	common/molten_stack.c	/^void mo_stack_del_top(mo_stack *stack)$/;"	f
mo_stack_destroy	common/molten_stack.c	/^void mo_stack_destroy(mo_stack *stack)$/;"	f
mo_stack_element	common/molten_stack.c	/^void *mo_stack_element(mo_stack *stack, int offset)$/;"	f
mo_stack_empty	common/molten_stack.c	/^int mo_stack_empty(mo_stack *stack)$/;"	f
mo_stack_init	common/molten_stack.c	/^void mo_stack_init(mo_stack *stack, int size, stack_dtor_func dtor)$/;"	f
mo_stack_num	common/molten_stack.c	/^int mo_stack_num(mo_stack *stack)$/;"	f
mo_stack_pop	common/molten_stack.c	/^void mo_stack_pop(mo_stack *stack, void *element)$/;"	f
mo_stack_push	common/molten_stack.c	/^int mo_stack_push(mo_stack *stack, void *element)$/;"	f
mo_stack_sec_element	common/molten_stack.c	/^void *mo_stack_sec_element(mo_stack *stack)$/;"	f
mo_stack_top	common/molten_stack.c	/^void *mo_stack_top(mo_stack *stack)$/;"	f
mo_time_m	molten_util.h	/^static inline long mo_time_m()$/;"	f
mo_time_sec	molten_util.h	/^static inline long mo_time_sec()$/;"	f
mo_time_u2s	molten_util.h	/^static inline long mo_time_u2s(long usec)$/;"	f
mo_time_usec	molten_util.h	/^static inline long mo_time_usec()$/;"	f
mo_zend_array_count	php7_wrapper.h	206;"	d
mo_zend_array_count	php7_wrapper.h	74;"	d
mo_zend_get_constant	php7_wrapper.h	/^static inline int mo_zend_get_constant(char *key, int len, zval *z)$/;"	f
mo_zend_get_constant	php7_wrapper.h	68;"	d
mo_zend_hash_add	php7_wrapper.h	/^static inline int mo_zend_hash_add(HashTable *ht, char *k, int len, void *val, int datasize, void **pDest)$/;"	f
mo_zend_hash_add	php7_wrapper.h	40;"	d
mo_zend_hash_exists	php7_wrapper.h	/^static inline int mo_zend_hash_exists(HashTable *ht, char *k, int len)$/;"	f
mo_zend_hash_exists	php7_wrapper.h	147;"	d
mo_zend_hash_find	php7_wrapper.h	/^static inline int mo_zend_hash_find(HashTable *ht, char *k, int len, void **v)$/;"	f
mo_zend_hash_get_current_data	php7_wrapper.h	/^static inline int mo_zend_hash_get_current_data(HashTable *ht, void **v)$/;"	f
mo_zend_hash_get_current_data_zval	php7_wrapper.h	/^static inline int mo_zend_hash_get_current_data_zval(HashTable *ht, void **v)$/;"	f
mo_zend_hash_index_del	php7_wrapper.h	/^static inline int mo_zend_hash_index_del(HashTable *ht, ulong h)$/;"	f
mo_zend_hash_index_del	php7_wrapper.h	148;"	d
mo_zend_hash_index_find	php7_wrapper.h	/^static inline int mo_zend_hash_index_find(HashTable *ht, ulong h, void **v)$/;"	f
mo_zend_hash_index_update	php7_wrapper.h	/^static inline int mo_zend_hash_index_update(HashTable *ht, ulong h, void *pData, uint nDataSize, void **pDest)$/;"	f
mo_zend_hash_index_update	php7_wrapper.h	39;"	d
mo_zend_hash_index_zval_find	php7_wrapper.h	/^static inline int mo_zend_hash_index_zval_find(HashTable *ht, ulong h, void **v)$/;"	f
mo_zend_hash_index_zval_find	php7_wrapper.h	133;"	d
mo_zend_hash_str_add_zval	php7_wrapper.h	/^static inline void mo_zend_hash_str_add_zval(HashTable *ht, char *k, int len, zval *val, int datasize, void **pDest)$/;"	f
mo_zend_hash_str_add_zval	php7_wrapper.h	41;"	d
mo_zend_hash_update	php7_wrapper.h	/^static inline int mo_zend_hash_update(HashTable *ht, char *k, int len, void *val, int nDataSize, void **pDest)$/;"	f
mo_zend_hash_update	php7_wrapper.h	37;"	d
mo_zend_hash_update_ptr	php7_wrapper.h	/^static inline int mo_zend_hash_update_ptr(HashTable *ht, char *k, int len, void *val, int nDataSize, void **pDest)$/;"	f
mo_zend_hash_update_ptr	php7_wrapper.h	38;"	d
mo_zend_hash_zval_find	php7_wrapper.h	/^static inline int mo_zend_hash_zval_find(HashTable *ht, char *k, int len, void **v)$/;"	f
mo_zend_hash_zval_find	php7_wrapper.h	119;"	d
mo_zend_is_auto_global	php7_wrapper.h	205;"	d
mo_zend_is_auto_global	php7_wrapper.h	73;"	d
mo_zend_read_property	php7_wrapper.h	/^static inline zval *mo_zend_read_property(zend_class_entry *class_ptr, zval *obj, char *s, int len, int silent)$/;"	f
mo_zend_read_property	php7_wrapper.h	72;"	d
mo_zval_dtor	php7_wrapper.h	198;"	d
mo_zval_dtor	php7_wrapper.h	70;"	d
mo_zval_ptr_dtor	php7_wrapper.h	197;"	d
mo_zval_ptr_dtor	php7_wrapper.h	69;"	d
molten	php_molten.h	/^PHP_MINFO_FUNCTION(molten);$/;"	v
molten	php_molten.h	/^PHP_MINIT_FUNCTION(molten);$/;"	v
molten	php_molten.h	/^PHP_MSHUTDOWN_FUNCTION(molten);$/;"	v
molten	php_molten.h	/^PHP_RINIT_FUNCTION(molten);$/;"	v
molten	php_molten.h	/^PHP_RSHUTDOWN_FUNCTION(molten);$/;"	v
molten_clear_reload_function	molten.c	/^static void molten_clear_reload_function()$/;"	f	file:
molten_curl_exec	molten.c	/^PHP_FUNCTION(molten_curl_exec);$/;"	v
molten_curl_reset	molten.c	/^PHP_FUNCTION(molten_curl_reset);$/;"	v
molten_curl_setopt	molten.c	/^PHP_FUNCTION(molten_curl_setopt);$/;"	v
molten_curl_setopt_array	molten.c	/^PHP_FUNCTION(molten_curl_setopt_array);$/;"	v
molten_deps	molten.c	/^static const zend_module_dep molten_deps[] = {$/;"	v	file:
molten_error_cb	molten.c	/^void molten_error_cb(int type, const char *error_filename, const uint error_lineno, const char *format, va_list args)$/;"	f
molten_functions	molten.c	/^const zend_function_entry molten_functions[] = {$/;"	v
molten_module_entry	molten.c	/^zend_module_entry molten_module_entry = {$/;"	v
molten_reload_curl_function	molten.c	/^static void molten_reload_curl_function()$/;"	f	file:
molten_set_service_name	molten.c	/^PHP_FUNCTION(molten_set_service_name);$/;"	v
mongodb_record	molten_intercept.c	/^static void mongodb_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
mongodb_server_record	molten_intercept.c	/^static void mongodb_server_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
mri	molten_ctrl.h	/^    mo_repi_t   *mri;$/;"	m	struct:__anon9
msh	common/molten_shm.h	/^    mo_slot_header_t    *msh;           \/* molten slot header *\/$/;"	m	struct:__anon4
msm	php_molten.h	/^    mo_shm_t                msm;                    \/* shm module *\/$/;"	v
msr	molten_ctrl.h	/^    mo_sr_t     *msr;$/;"	m	struct:__anon9
mss	common/molten_shm.h	/^    mo_slot_t           *mss;           \/* status shm *\/ $/;"	m	struct:__anon4
mysql	tests/bug_001.php	/^$mysql = mysqli_init();$/;"	v
mysql	tests/bug_001_ot.php	/^$mysql = mysqli_init();$/;"	v
mysqli_common_error	molten_intercept.c	/^static void mysqli_common_error(mo_frame_t *frame, int is_procedural, zval *span, mo_interceptor_t *pit, char *error_function, char *class_entry_name) $/;"	f	file:
mysqli_common_record	molten_intercept.c	/^static void mysqli_common_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
mysqli_connect_common_record	molten_intercept.c	/^static void mysqli_connect_common_record(mo_interceptor_t *pit, mo_frame_t *frame, int is_procedural)$/;"	f	file:
mysqli_connect_record	molten_intercept.c	/^static void mysqli_connect_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
mysqli_construct_record	molten_intercept.c	/^static void mysqli_construct_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
mysqli_error	molten_intercept.c	/^static void mysqli_error(mo_frame_t *frame, int is_procedural, zval *span, mo_interceptor_t *pit)$/;"	f	file:
mysqli_oo_query_record	molten_intercept.c	/^static void mysqli_oo_query_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
mysqli_query_record	molten_intercept.c	/^static void mysqli_query_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
mysqli_real_connect_record	molten_intercept.c	/^static void mysqli_real_connect_record(mo_interceptor_t *pit, mo_frame_t *frame) $/;"	f	file:
mysqli_stmt_error	molten_intercept.c	/^static void mysqli_stmt_error(mo_frame_t *frame, int is_procedural, zval *span, mo_interceptor_t *pit) $/;"	f	file:
mysqli_stmt_exe_common_record	molten_intercept.c	/^static void mysqli_stmt_exe_common_record(mo_interceptor_t *pit, mo_frame_t *frame, int procedural)$/;"	f	file:
mysqli_stmt_exe_oo_record	molten_intercept.c	/^static void mysqli_stmt_exe_oo_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
mysqli_stmt_exe_procedural_record	molten_intercept.c	/^static void mysqli_stmt_exe_procedural_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
mysqli_stmt_get_sa	molten_intercept.c	/^static void mysqli_stmt_get_sa(mo_interceptor_t *pit, mo_frame_t *frame, int procedural, zval *span)$/;"	f	file:
mysqli_stmt_prepare_common_record	molten_intercept.c	/^static void mysqli_stmt_prepare_common_record(mo_interceptor_t *pit, mo_frame_t *frame, int procedural)$/;"	f	file:
mysqli_stmt_prepare_procedural_record	molten_intercept.c	/^static void mysqli_stmt_prepare_procedural_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
n	run-tests.php	/^		$n = @stream_select($r, $w, $e, $timeout);$/;"	v
n_total	run-tests.php	/^	$n_total = count($test_results);$/;"	v
name	molten_struct.h	/^    char *name;$/;"	m	struct:__anon18
name	run-tests.php	/^				$name = $name[0];$/;"	v
name	run-tests.php	/^			$name = trim($setting[0]);$/;"	v
name	run-tests.php	/^	foreach($ini_settings as $name => $value) {$/;"	v
no_clean	run-tests.php	/^					$no_clean = true;$/;"	v
no_clean	run-tests.php	/^$no_clean = false;$/;"	v
notify_uri	php_molten.h	/^    char                    *notify_uri;            \/* notify uri *\/$/;"	v
o	run-tests.php	/^	$o = explode("\\n", $output);$/;"	v
o	run-tests.php	/^	$o = opendir($dir) or error("cannot open directory: $dir");$/;"	v
object	molten_struct.h	/^    zval            *object;          \/* object *\/$/;"	m	struct:__anon20
obtain_zend_function	molten.c	/^static inline zend_function *obtain_zend_function(zend_bool internal, zend_execute_data *ex, zend_op_array *op_array TSRMLS_DC)$/;"	f	file:
old1	run-tests.php	/^	$old1 = array();$/;"	v
old2	run-tests.php	/^	$old2 = array();$/;"	v
old_php	run-tests.php	/^				$old_php = $php;$/;"	v
old_php	run-tests.php	/^			$old_php = $php;$/;"	v
option	example/response.php	/^$option = isset($_GET['option']) ? $_GET['option'] : null ;$/;"	v
option	tool/response.php	/^$option = isset($_GET['option']) ? $_GET['option'] : null ;$/;"	v
optionals	run-tests.php	/^$optionals = array('tests', 'ext', 'Zend', 'ZendEngine2', 'sapi\/cli', 'sapi\/cgi', 'sapi\/fpm');$/;"	v
org_file	run-tests.php	/^	$org_file = $file;$/;"	v
org_headers	run-tests.php	/^		$org_headers = $headers;$/;"	v
ori_args	molten_struct.h	/^    zval            **ori_args;       \/* origin args *\/$/;"	m	struct:__anon20
ori_args	molten_struct.h	/^    zval            *ori_args;        \/* origin args *\/$/;"	m	struct:__anon20
ori_execute	molten.c	/^static void (*ori_execute)(zend_op_array *op_array TSRMLS_DC);$/;"	v	file:
ori_execute_ex	molten.c	/^static void (*ori_execute_ex)(zend_execute_data *execute_data TSRMLS_DC);$/;"	v	file:
ori_execute_ex	molten.c	/^static void (*ori_execute_ex)(zend_execute_data *execute_data);$/;"	v	file:
ori_execute_internal	molten.c	/^static void (*ori_execute_internal)(zend_execute_data *execute_data, zval *return_value);$/;"	v	file:
ori_execute_internal	molten.c	/^static void (*ori_execute_internal)(zend_execute_data *execute_data_ptr, int return_value_used TSRMLS_DC);$/;"	v	file:
ori_execute_internal	molten.c	/^static void (*ori_execute_internal)(zend_execute_data *execute_data_ptr, zend_fcall_info *fci, int return_value_used TSRMLS_DC);$/;"	v	file:
ori_ret	molten_struct.h	/^    zval            *ori_ret;         \/* origin ret *\/$/;"	m	struct:__anon20
orig_func	molten.c	/^    char *orig_func;$/;"	m	struct:mo_reload_def_st	file:
origin_curl_exec	molten.c	/^zend_function *origin_curl_exec =  NULL;$/;"	v
origin_curl_reset	molten.c	/^zend_function *origin_curl_reset = NULL;$/;"	v
origin_curl_setopt	molten.c	/^zend_function *origin_curl_setopt =  NULL;$/;"	v
origin_curl_setopt_array	molten.c	/^zend_function *origin_curl_setopt_array =  NULL;$/;"	v
ot_add_log	molten_span.c	/^void ot_add_log(zval *span, long timestamp, int8_t field_num, ...)$/;"	f
ot_add_tag	molten_span.c	/^void ot_add_tag(zval *span, const char *key, const char *val) $/;"	f
ot_add_tag_bool	molten_span.c	/^void ot_add_tag_bool(zval *span, const char *key, uint8_t val)$/;"	f
ot_add_tag_long	molten_span.c	/^void ot_add_tag_long(zval *span, const char *key, long val)$/;"	f
ot_span_add_ba_builder	molten_span.c	/^void ot_span_add_ba_builder(zval *span, const char *key, const char *value, long timestamp, char *service_name, char *ipv4, long port, uint8_t ba_type)$/;"	f
ot_span_add_ba_ex_builder	molten_span.c	/^void ot_span_add_ba_ex_builder(zval *span, const char *key, const char *value, long timestamp, struct mo_chain_st *pct, uint8_t ba_type)$/;"	f
ot_start_span	molten_span.c	/^void ot_start_span(zval **span, char *op_name, char *trace_id, char *span_id, char *parent_id, int sampled, long start_time, long finish_time)$/;"	f
ot_start_span_builder	molten_span.c	/^void ot_start_span_builder(zval **span, char *service_name, char *trace_id, char *span_id, char *parent_id, long start_time, long finish_time, struct mo_chain_st *pct, uint8_t an_type)$/;"	f
ot_start_span_ex_builder	molten_span.c	/^void ot_start_span_ex_builder(zval **span, char *service_name, struct mo_chain_st *pct, mo_frame_t *frame, uint8_t an_type)$/;"	f
out	run-tests.php	/^	$out = system_with_timeout($cmd, $env, isset($section_text['STDIN']) ? $section_text['STDIN'] : null);$/;"	v
output	run-tests.php	/^			$output = system_with_timeout("$extra $php $pass_options -q $ini_settings -d display_errors=0 \\"$test_skipif\\"", $env);$/;"	v
output	run-tests.php	/^		$output = $output_headers . "\\n--HEADERS--\\n" . $output;$/;"	v
output	run-tests.php	/^		$output = trim($match[2]);$/;"	v
output	run-tests.php	/^	$output = preg_replace("\/\\r\\n\/", "\\n", trim($out));$/;"	v
output_file	run-tests.php	/^					$output_file = $argv[++$i];$/;"	v
output_file	run-tests.php	/^	$output_file = 'compress.zlib:\/\/' . $output_file . '.gz';$/;"	v
output_file	run-tests.php	/^$output_file = $CUR_DIR . '\/php_test_results_' . date('Ymd_Hi') . '.txt';$/;"	v
output_filename	run-tests.php	/^	$output_filename   = $temp_dir . DIRECTORY_SEPARATOR . $main_file_name . 'out';$/;"	v
output_headers	run-tests.php	/^		$output_headers = array();$/;"	v
output_headers	run-tests.php	/^		$output_headers = join("\\n", $output_headers);$/;"	v
output_type	molten_log.h	/^    uint8_t output_type;        \/* sink output type *\/$/;"	m	struct:__anon13
output_type	php_molten.h	/^    long                    output_type;            \/* sink spans output type *\/$/;"	v
output_type	run-tests.php	/^		$output_type = $type . 'ED';$/;"	v
output_type	run-tests.php	/^		$output_type = $type[0] . 'ED';$/;"	v
over_func	molten.c	/^    char *over_func;$/;"	m	struct:mo_reload_def_st	file:
parent_span_id	molten_struct.h	/^    mo_chain_key_t *parent_span_id;     \/* parent sapn id *\/$/;"	m	struct:__anon19
pass_key	molten_struct.h	/^    char *pass_key;$/;"	m	struct:__anon18
pass_key_len	molten_struct.h	/^    int pass_key_len;$/;"	m	struct:__anon18
pass_option_n	run-tests.php	/^					$pass_option_n = true;$/;"	v
pass_option_n	run-tests.php	/^$pass_option_n = false;$/;"	v
pass_options	run-tests.php	/^$pass_options = '';$/;"	v
passed	run-tests.php	/^			$passed = true;$/;"	v
passed	run-tests.php	/^		$passed = false;$/;"	v
passed	run-tests.php	/^	$passed = false;$/;"	v
path	molten_log.h	/^    char *path;$/;"	m	struct:__anon13
path	run-tests.php	/^		$path = $url_bits['host'].$url_bits['path'];$/;"	v
path	run-tests.php	/^		$path = $url_bits['path'];$/;"	v
path	tests/change_span_id.php	/^$path = 'http:\/\/' . $hostname . ':' . $port;$/;"	v
path	tests/molten_011.php	/^$path = 'http:\/\/' . $hostname . ':' . $port;$/;"	v
path	tests/molten_ot.php	/^$path = 'http:\/\/' . $hostname . ':' . $port;$/;"	v
pattern_match	run-tests.php	/^					$pattern_match = glob($argv[$i] . '.phpt');$/;"	v
pattern_match	run-tests.php	/^					$pattern_match = glob($argv[$i]);$/;"	v
payload	common/molten_shm.h	/^    unsigned char   payload[PAYLOAD_SIZE];$/;"	m	struct:__anon2
pch	molten_struct.h	/^    mo_chain_header_t pch;              \/* chain header *\/$/;"	m	struct:mo_chain_st
pcl	molten_struct.h	/^    mo_chain_log_t *pcl; $/;"	m	struct:mo_chain_st
pcl	php_molten.h	/^    mo_chain_log_t          pcl;                    \/* log module *\/$/;"	v
pcre_common_match	molten_intercept.c	/^static char *pcre_common_match(char *pattern, int len, char *subject) $/;"	f	file:
pct	molten_intercept.h	/^    struct mo_chain_st *pct;$/;"	m	struct:__anon10	typeref:struct:__anon10::mo_chain_st
pct	php_molten.h	/^    mo_chain_t              pct;                    \/* chain module *\/$/;"	v
pdo_record	molten_intercept.c	/^static void pdo_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
pdo_statement_record	molten_intercept.c	/^static void pdo_statement_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
percent_results	run-tests.php	/^	$percent_results = array();$/;"	v
php	run-tests.php	/^						$php = PHP_BINARY;$/;"	v
php	run-tests.php	/^					$php = $argv[++$i];$/;"	v
php	run-tests.php	/^					$php = $old_php;$/;"	v
php	run-tests.php	/^				$php = $old_php;$/;"	v
php	run-tests.php	/^				$php = realpath(".\/sapi\/cgi\/php-cgi") . ' -C ';$/;"	v
php	run-tests.php	/^				$php = realpath(dirname($php) . "\/..\/..\/sapi\/cgi\/php-cgi") . ' -C ';$/;"	v
php	run-tests.php	/^				$php = realpath(dirname($php) . "\/php-cgi") . ' -C ';$/;"	v
php	run-tests.php	/^			$php = $php_cgi . ' -C ';$/;"	v
php	run-tests.php	/^			$php = realpath(dirname($php) . "\/php-cgi.exe") . ' -C ';$/;"	v
php	run-tests.php	/^		$php = $cwd . '\/sapi\/cli\/php';$/;"	v
php	run-tests.php	/^		$php = $old_php;$/;"	v
php	run-tests.php	/^	$php = getenv('TEST_PHP_EXECUTABLE');$/;"	v
php	run-tests.php	/^$php = null;$/;"	v
php_cgi	run-tests.php	/^				$php_cgi = null;$/;"	v
php_cgi	run-tests.php	/^			$php_cgi = $cwd . '\/sapi\/cgi\/php-cgi';$/;"	v
php_cgi	run-tests.php	/^		$php_cgi = $cwd . '\/sapi\/cgi\/php-cgi';$/;"	v
php_cgi	run-tests.php	/^		$php_cgi = $env['TEST_PHP_CGI_EXECUTABLE'];$/;"	v
php_cgi	run-tests.php	/^	$php_cgi = getenv('TEST_PHP_CGI_EXECUTABLE');$/;"	v
php_cgi	run-tests.php	/^$php_cgi = null;$/;"	v
php_cgi_info	run-tests.php	/^		$php_cgi_info = "$php_info_sep\\nPHP         : $php_cgi $php_info_cgi$php_info_sep";$/;"	v
php_cgi_info	run-tests.php	/^		$php_cgi_info = '';$/;"	v
php_executable	example/server.php	/^	$php_executable = getenv('TEST_PHP_EXECUTABLE');$/;"	v
php_info	run-tests.php	/^	$php_info = '<?php echo "$/;"	v
php_info	run-tests.php	/^	$php_info = `$php $pass_options $info_params "$info_file"`;$/;"	v
php_info_cgi	run-tests.php	/^		$php_info_cgi = `$php_cgi $pass_options $info_params -q "$info_file"`;$/;"	v
php_info_sep	run-tests.php	/^		$php_info_sep = "\\n---------------------------------------------------------------------";$/;"	v
php_trace_init_globals	molten.c	/^static void php_trace_init_globals(zend_molten_globals *ptg)$/;"	f	file:
php_version	run-tests.php	/^	$php_version = urlencode(TESTED_PHP_VERSION);$/;"	v
phpext_trace_ptr	php_molten.h	21;"	d
phpincludedir	Makefile	/^phpincludedir = \/usr\/local\/php5.6\/include\/php$/;"	m
phplibdir	Makefile	/^phplibdir = \/root\/source\/molten\/Molten\/modules$/;"	m
pit	molten_intercept.h	/^    mo_interceptor_t *pit;$/;"	m	struct:__anon11
pit	php_molten.h	/^    mo_interceptor_t        pit;                    \/* intercept module *\/$/;"	v
pop_span_context	molten_span.c	/^void pop_span_context(mo_stack *stack)$/;"	f
port	molten_struct.h	/^    int port;                           \/* port *\/$/;"	m	struct:__anon19
port	run-tests.php	/^		$port = $proxy['port'];$/;"	v
port	run-tests.php	/^		$port = empty($url_bits['port']) ? 80 : $port = $url_bits['port'];$/;"	v
port	tests/change_span_id.php	/^$port = '8964';$/;"	v
port	tests/molten_011.php	/^$port = '8964';$/;"	v
port	tests/molten_ot.php	/^$port = '8964';$/;"	v
post	run-tests.php	/^		$post = trim($section_text['POST']);$/;"	v
post	run-tests.php	/^		$post = trim($section_text['POST_RAW']);$/;"	v
post	run-tests.php	/^		$post = trim($section_text['PUT']);$/;"	v
post	run-tests.php	/^        $post = gzcompress($post, 9);$/;"	v
post	run-tests.php	/^        $post = gzencode($post, 9, FORCE_GZIP);$/;"	v
post	run-tests.php	/^        $post = trim($section_text['DEFLATE_POST']);$/;"	v
post	run-tests.php	/^        $post = trim($section_text['GZIP_POST']);$/;"	v
post_uri	molten_log.h	/^    char *post_uri;             \/* post uri *\/$/;"	m	struct:__anon13
post_uri	molten_log.h	/^    char *post_uri;$/;"	m	struct:__anon12
prd	molten.c	/^static const mo_reload_def prd[] = {$/;"	v	file:
pre	php_molten.h	/^    mo_report_t             pre;                    \/* report module *\/$/;"	v
prefix	Makefile	/^prefix = \/usr\/local\/php5.6$/;"	m
proc	run-tests.php	/^	$proc = proc_open($commandline, array($/;"	v
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
proxy	run-tests.php	/^		$proxy = parse_url($proxy);$/;"	v
prt	php_molten.h	/^    mo_ctrl_t               prt;                    \/* control module *\/$/;"	v
psb	molten_intercept.h	/^    mo_span_builder    *psb; $/;"	m	struct:__anon10
psb	php_molten.h	/^    mo_span_builder         psb;                    \/* span builder *\/$/;"	v
push_span_context	molten_span.c	/^void push_span_context(mo_stack *stack)$/;"	f
push_span_context_with_id	molten_span.c	/^void push_span_context_with_id(mo_stack *stack, char *span_id)$/;"	f
query_string	molten_struct.h	/^    const char *query_string;$/;"	m	struct:mo_chain_st
query_string	run-tests.php	/^		$query_string = '';$/;"	v
query_string	run-tests.php	/^		$query_string = trim($section_text['GET']);$/;"	v
r	run-tests.php	/^			$r = "%r";$/;"	v
r	run-tests.php	/^		$r = $pipes;$/;"	v
r	run-tests.php	/^	$r = is_null($wanted_re) ? $w : explode("\\n", $wanted_re);$/;"	v
rand64hex	molten_util.c	/^void rand64hex(char **output) $/;"	f
rand_uint64	molten_util.c	/^uint64_t rand_uint64(void) $/;"	f
raw_lines	run-tests.php	/^		$raw_lines = explode("\\n", $post);$/;"	v
real_path	molten_log.h	/^    char real_path[128];        \/* log real path *\/$/;"	m	struct:__anon13
receive_key	molten_struct.h	/^    char *receive_key;$/;"	m	struct:__anon18
receive_key_len	molten_struct.h	/^    int receive_key_len;$/;"	m	struct:__anon18
record	molten_intercept.h	/^    record_func record;$/;"	m	struct:__anon11
record_func	molten_intercept.h	/^typedef void (*record_func)(mo_interceptor_t *pit, mo_frame_t *frame);$/;"	t
redir_tested	run-tests.php	/^function run_all_tests($test_files, $env, $redir_tested = null)$/;"	v
redir_tests	run-tests.php	/^$redir_tests = array();$/;"	v
redirenv	run-tests.php	/^			$redirenv = array_merge($environment, $IN_REDIRECT['ENV']);$/;"	v
redis	tests/improve_redis_close.php	/^$redis = new Redis();$/;"	v
redis	tests/molten_006.php	/^$redis = new Redis();$/;"	v
redis	tests/molten_ot.php	/^    $redis = new Redis();$/;"	v
redis	tests/molten_ot.php	/^$redis = new Redis();$/;"	v
redis_record	molten_intercept.c	/^static void redis_record(mo_interceptor_t *pit, mo_frame_t *frame)$/;"	f	file:
rep_error_dtor	molten_report.c	/^void rep_error_dtor(void *data)$/;"	f
rep_interval	molten_report.h	/^    long            rep_interval;              \/* rep interval *\/$/;"	m	struct:__anon15
repeat	run-tests.php	/^						$repeat = true;$/;"	v
repeat	run-tests.php	/^			$repeat = false;$/;"	v
repeat	run-tests.php	/^		$repeat = substr($argv[$i],0,1) == '-';$/;"	v
replace_count	run-tests.php	/^					$replace_count = 0;$/;"	v
report_interval	php_molten.h	/^    long                    report_interval;        \/* call ctrl interval *\/$/;"	v
report_limit	molten_report.h	/^    long            report_limit;              \/* report count limit *\/$/;"	m	struct:__anon15
report_limit	php_molten.h	/^    long                    report_limit;           \/* report limit *\/$/;"	v
repr_zval	molten_util.c	/^smart_string repr_zval(zval *zv, int limit TSRMLS_DC)$/;"	f
req_interval	molten_ctrl.h	/^    long        req_interval;                \/* request interval microtime *\/$/;"	m	struct:__anon9
request	run-tests.php	/^		$request = '';$/;"	v
request_all	molten_ctrl.h	/^   unsigned long request_all;                \/* request all (long)       *\/$/;"	m	struct:__anon7
request_capture	molten_ctrl.h	/^   unsigned long request_capture;            \/* request capture (long)   *\/$/;"	m	struct:__anon7
request_num	molten_ctrl.h	/^    long request_num;               \/* request num *\/$/;"	m	struct:__anon8
request_uri	molten_struct.h	/^    const char *request_uri;$/;"	m	struct:mo_chain_st
request_uri	php_molten.h	/^    smart_string            request_uri;            \/* request url *\/$/;"	v
response	example/response.php	/^$response = '';$/;"	v
response	tool/response.php	/^$response = '';$/;"	v
result	run-tests.php	/^			if ($failed_tests_file && ($result == 'XFAILED' || $result == 'FAILED' || $result == 'WARNED' || $result == 'LEAKED')) {$/;"	v
result	run-tests.php	/^		$result = run_test($php, $name, $env);$/;"	v
result	run-tests.php	/^    $result = sprintf($/;"	v
result	tests/molten_008.php	/^    $result = $manager->executeBulkWrite("db.collection", $bulk);$/;"	v
result	tests/molten_008.php	/^$result = $manager->executeBulkWrite("db.collection", $bulk);$/;"	v
result	tests/molten_008.php	/^$result = $manager->executeBulkWrite('db.collection', $bulk, $writeConcern);$/;"	v
result	tests/molten_008.php	/^$result = $server->executeBulkWrite("db.collection", $bulk);$/;"	v
result	tests/molten_ot.php	/^    $result = $manager->executeBulkWrite("db.collection", $bulk);$/;"	v
result	tests/molten_ot.php	/^$result = $manager->executeBulkWrite("db.collection", $bulk);$/;"	v
result	tests/molten_ot.php	/^$result = $manager->executeBulkWrite('db.collection', $bulk, $writeConcern);$/;"	v
result	tests/molten_ot.php	/^$result = $server->executeBulkWrite("db.collection", $bulk);$/;"	v
retrieve_parent_span_id	molten_span.c	/^void retrieve_parent_span_id(mo_stack *stack, char **parent_span_id)$/;"	f
retrieve_parent_span_id_4_frame	molten_span.c	/^void retrieve_parent_span_id_4_frame(mo_frame_t *frame, char **parent_span_id)$/;"	f
retrieve_span_id	molten_span.c	/^void retrieve_span_id(mo_stack *stack, char **span_id)$/;"	f
retrieve_span_id_4_frame	molten_span.c	/^void retrieve_span_id_4_frame(mo_frame_t *frame, char **span_id)$/;"	f
rh	run-tests.php	/^		$rh = preg_split("\/[\\n\\r]+\/", $match[1]);$/;"	v
router	example/server.php	/^	    $router = "response.php";$/;"	v
rp	tests/molten_008.php	/^$rp = new MongoDB\\Driver\\ReadPreference(MongoDB\\Driver\\ReadPreference::RP_PRIMARY);$/;"	v
rp	tests/molten_ot.php	/^$rp = new MongoDB\\Driver\\ReadPreference(MongoDB\\Driver\\ReadPreference::RP_PRIMARY);$/;"	v
run_all_tests	run-tests.php	/^function run_all_tests($test_files, $env, $redir_tested = null)$/;"	f
run_test	run-tests.php	/^function run_test($php, $file, $env)$/;"	f
running	tests/molten_ot.php	/^$running=null;$/;"	v
sampled	molten_struct.h	/^    mo_chain_key_t *sampled;            \/* sampled *\/$/;"	m	struct:__anon19
sampling_rate	molten_ctrl.h	/^    long        sampling_rate;$/;"	m	struct:__anon6
sampling_rate	php_molten.h	/^    long                    sampling_rate;          \/* tracing sampling rate *\/$/;"	v
sampling_request	molten_ctrl.h	/^    long        sampling_request;       \/* sampling request\/minute for ervery server *\/$/;"	m	struct:__anon6
sampling_request	php_molten.h	/^    long                    sampling_request;       \/* sampling by request one minute *\/$/;"	v
sampling_type	molten_ctrl.h	/^    uint8_t     sampling_type;$/;"	m	struct:__anon6
sampling_type	php_molten.h	/^    long                    sampling_type;          \/* sampling type *\/$/;"	v
sapi	molten_struct.h	/^    const char *sapi;$/;"	m	struct:mo_chain_st
save_func	molten.c	/^    char *save_func;$/;"	m	struct:mo_reload_def_st	file:
save_or_mail_results	run-tests.php	/^function save_or_mail_results()$/;"	f
save_text	run-tests.php	/^function save_text($filename, $text, $filename_copy = null)$/;"	f
script	molten_struct.h	/^    char *script;$/;"	m	struct:mo_chain_st
secdone	run-tests.php	/^			$secdone = false;$/;"	v
secdone	run-tests.php	/^			$secdone = true;$/;"	v
secdone	run-tests.php	/^	$secdone = false;$/;"	v
secfile	run-tests.php	/^			$secfile = $section == 'FILE' || $section == 'FILEEOF' || $section == 'FILE_EXTERNAL';$/;"	v
secfile	run-tests.php	/^	$secfile = false;$/;"	v
section	run-tests.php	/^			$section = $r[1];$/;"	v
section	run-tests.php	/^			$section = strtoupper($file);$/;"	v
section	run-tests.php	/^	$section = 'TEST';$/;"	v
section	run-tests.php	/^function show_file_block($file, $block, $section = null)$/;"	v
section_text	run-tests.php	/^	$section_text = array('TEST' => '');$/;"	v
send_data_by_http	molten_log.c	/^void send_data_by_http(char *post_uri, char *post_data)$/;"	f
sep	run-tests.php	/^			$sep = "\\n" . str_repeat('=', 80) . "\\n";$/;"	v
server	molten_log.h	/^    struct sockaddr_un server;  \/* server addr *\/$/;"	m	struct:__anon13	typeref:struct:__anon13::sockaddr_un
server	tests/molten_008.php	/^$server = $manager->selectServer($rp);$/;"	v
server	tests/molten_ot.php	/^$server = $manager->selectServer($rp);$/;"	v
server_start	example/server.php	/^function server_start($hostname, $port, $router, $sn) {$/;"	f
service_name	molten_struct.h	/^    char *service_name;$/;"	m	struct:mo_chain_st
service_name	php_molten.h	/^    char                    *service_name;          \/* service name *\/$/;"	v
setting	run-tests.php	/^			$setting = explode("=", $setting, 2);$/;"	v
settings	run-tests.php	/^	$settings = '';$/;"	v
settings2array	run-tests.php	/^function settings2array($settings, &$ini_settings)$/;"	f
settings2params	run-tests.php	/^function settings2params(&$ini_settings)$/;"	f
sfd	molten_log.h	/^    int sfd;                    \/* unix domain syslog fd *\/$/;"	m	struct:__anon13
sh_filename	run-tests.php	/^	$sh_filename       = $temp_dir . DIRECTORY_SEPARATOR . $main_file_name . 'sh';$/;"	v
shared_objects_molten	Makefile	/^shared_objects_molten = molten.lo molten_log.lo molten_intercept.lo molten_ctrl.lo common\/molten_shm.lo common\/molten_stack.lo common\/molten_lock.lo molten_util.lo molten_span.lo molten_status.lo molten_report.lo molten_chain.lo$/;"	m
shm_id	common/molten_shm.h	/^    int                 shm_id;         \/* shm id *\/$/;"	m	struct:__anon4
shm_key	common/molten_shm.h	/^    key_t               shm_key;        \/* shm key *\/$/;"	m	struct:__anon4
shm_size	common/molten_shm.h	/^    int                 shm_size;       \/* shm size *\/$/;"	m	struct:__anon4
shortname	run-tests.php	/^	$shortname = str_replace($cwd . '\/', '', $file);$/;"	v
show_end	run-tests.php	/^function show_end($end_time)$/;"	f
show_file_block	run-tests.php	/^function show_file_block($file, $block, $section = null)$/;"	f
show_redirect_ends	run-tests.php	/^function show_redirect_ends($tests, $tested, $tested_file)$/;"	f
show_redirect_start	run-tests.php	/^function show_redirect_start($tests, $tested, $tested_file)$/;"	f
show_result	run-tests.php	/^function show_result($result, $tested, $tested_file, $extra = '', $temp_filenames = null)$/;"	f
show_start	run-tests.php	/^function show_start($start_time)$/;"	f
show_summary	run-tests.php	/^function show_summary()$/;"	f
show_test	run-tests.php	/^function show_test($test_idx, $shortname)$/;"	f
shtool_exit	build/shtool	/^shtool_exit () {$/;"	f
sink_http_uri	php_molten.h	/^    char                    *sink_http_uri;         \/* sink http uri *\/$/;"	v
sink_kafka_brokers	php_molten.h	/^    char                    *sink_kafka_brokers;    \/* sink kafka brokers *\/$/;"	v
sink_kafka_topic	php_molten.h	/^    char                    *sink_kafka_topic;      \/* sink kafka topic *\/$/;"	v
sink_syslog_unix_socket	php_molten.h	/^    char                    *sink_syslog_unix_socket; \/* sink syslog unix *\/$/;"	v
sink_type	molten_log.h	/^    uint8_t sink_type;          \/* log sink type *\/$/;"	m	struct:__anon13
sink_type	php_molten.h	/^    long                    sink_type;              \/* log sink type *\/$/;"	v
size	common/molten_stack.h	/^    int size, top, max;$/;"	m	struct:__anon5
skip_ext	run-tests.php	/^			$skip_ext = ($is_ext_dir && !in_array(strtolower($name), $exts_to_test));$/;"	v
slot_num	common/molten_shm.h	/^    int                 slot_num; $/;"	m	struct:__anon3
smart_strcmp	php7_wrapper.h	365;"	d
smart_string	php7_wrapper.h	28;"	d
smart_string_0	php7_wrapper.h	32;"	d
smart_string_appendl	php7_wrapper.h	31;"	d
smart_string_appends	php7_wrapper.h	30;"	d
smart_string_free	php7_wrapper.h	29;"	d
smart_string_len	php7_wrapper.h	363;"	d
smart_string_str	php7_wrapper.h	364;"	d
smart_strncmp	php7_wrapper.h	366;"	d
span_add_ba	molten_span.h	/^    span_add_ba_func        span_add_ba;$/;"	m	struct:__anon16
span_add_ba_ex	molten_span.h	/^    span_add_ba_ex_func     span_add_ba_ex;$/;"	m	struct:__anon16
span_add_ba_ex_func	molten_span.h	/^typedef void (*span_add_ba_ex_func)(zval *span, const char *key, const char *value, long timestamp, struct mo_chain_st *pct, uint8_t ba_type);$/;"	t
span_add_ba_func	molten_span.h	/^typedef void (*span_add_ba_func)(zval *span, const char *key, const char *value, long timestamp, char *service_name, char *ipv4, long port, uint8_t ba_type);$/;"	t
span_context_dtor	molten_span.c	/^void span_context_dtor(void *element)$/;"	f
span_count	molten_intercept.h	/^    int span_count;$/;"	m	struct:__anon10
span_count	molten_span.h	/^    int span_count;$/;"	m	struct:__anon17
span_format	php_molten.h	/^    char                    *span_format;           \/* the span format *\/$/;"	v
span_id	molten_span.h	/^    char *span_id;$/;"	m	struct:__anon17
span_id	molten_struct.h	/^    mo_chain_key_t *span_id;            \/* span id *\/$/;"	m	struct:__anon19
span_info_cache	molten_intercept.h	/^    zval *span_info_cache;                  \/* span info cache *\/$/;"	m	struct:__anon10
span_stack	molten_struct.h	/^    mo_stack        *span_stack;      \/* global span stack *\/$/;"	m	struct:__anon20
span_stack	molten_struct.h	/^    mo_stack *span_stack;               \/* link to global stack *\/ $/;"	m	struct:mo_chain_st
span_stack	php_molten.h	/^    mo_stack                span_stack;             \/* span stack *\/$/;"	v
spans	molten_log.h	/^    zval *spans;$/;"	m	struct:__anon13
sql	tests/bug_001.php	/^$sql = 'select * from configs';$/;"	v
sql	tests/bug_001_ot.php	/^$sql = 'select * from configs';$/;"	v
srcdir	Makefile	/^srcdir = \/root\/source\/molten\/Molten$/;"	m
st	run-tests.php	/^		$st = $steps \/ 2;$/;"	v
st	run-tests.php	/^		$st = $steps;$/;"	v
stack_dtor_func	common/molten_stack.h	/^typedef void (*stack_dtor_func)(void *element);$/;"	t
start	run-tests.php	/^					$start = $end = $length;$/;"	v
start	run-tests.php	/^				$start = strpos($wanted_re, $r, $startOffset);$/;"	v
start	run-tests.php	/^	$start = $JUNIT['files'][$file_name]['start'];$/;"	v
startOffset	run-tests.php	/^				$startOffset = $end + 2;$/;"	v
startOffset	run-tests.php	/^			$startOffset = 0;$/;"	v
start_span	molten_span.h	/^    start_span_func         start_span;$/;"	m	struct:__anon16
start_span_ex	molten_span.h	/^    start_span_ex_func      start_span_ex;$/;"	m	struct:__anon16
start_span_ex_func	molten_span.h	/^typedef void (*start_span_ex_func)(zval **span, char *service_name, struct mo_chain_st *pct, mo_frame_t *frame, uint8_t an_type);$/;"	t
start_span_func	molten_span.h	/^typedef void (*start_span_func)(zval **span, char *service_name, char *trace_id, char *span_id, char *parent_id, long start_time, long finish_time, struct mo_chain_st *pct, uint8_t an_type);$/;"	t
start_time	run-tests.php	/^		$start_time = time();$/;"	v
start_time	run-tests.php	/^$start_time = time();$/;"	v
started	run-tests.php	/^			$started = true;$/;"	v
started	run-tests.php	/^		$started = false;$/;"	v
stat	run-tests.php	/^	$stat = proc_get_status($proc);$/;"	v
status	run-tests.php	/^				$status = "failed";$/;"	v
status	run-tests.php	/^				$status = "success";$/;"	v
status	run-tests.php	/^function mail_qa_team($data, $compression, $status = false)$/;"	v
str	run-tests.php	/^	$str = "TEST $test_idx\/$test_cnt [$shortname]\\r";$/;"	v
suite	run-tests.php	/^		$suite = junit_get_suitename_for($file_name);$/;"	v
suite	run-tests.php	/^	$suite = $suite_name ? $JUNIT['suites'][$suite_name] : $JUNIT;$/;"	v
suite	run-tests.php	/^	$suite = junit_get_suitename_for($file_name);$/;"	v
sum_results	run-tests.php	/^	$sum_results = array($/;"	v
summary	run-tests.php	/^	$summary = '';$/;"	v
support_type	molten_log.h	/^    uint16_t support_type;      \/* sink support type *\/$/;"	m	struct:__anon13
switch	run-tests.php	/^					$switch = $argv[$i];$/;"	v
switch	run-tests.php	/^				$switch = substr($argv[$i],1,1);$/;"	v
switch	run-tests.php	/^		$switch = substr($argv[$i],1,1);$/;"	v
sys_libtool	run-tests.php	/^					$sys_libtool = shell_exec(str_replace("\\n", "", $sys_libtool_path) . ' --version');$/;"	v
sys_libtool_path	run-tests.php	/^				$sys_libtool_path = shell_exec(__DIR__ . '\/build\/shtool path glibtool libtool');$/;"	v
syslog_sink_init	molten_log.c	/^static void syslog_sink_init(mo_chain_log_t *log)$/;"	f	file:
syslog_sink_shutdown	molten_log.c	/^static void syslog_sink_shutdown(mo_chain_log_t *log) {$/;"	f	file:
system_with_timeout	run-tests.php	/^function system_with_timeout($commandline, $env = null, $stdin = null)$/;"	f
ta	run-tests.php	/^	$ta = strpos($a, "{$cwd}\/tests") === 0 ? 1 + (strpos($a, "{$cwd}\/tests\/run-test") === 0 ? 1 : 0) : 0;$/;"	v
tags	molten_intercept.h	/^    HashTable   *tags;$/;"	m	struct:__anon10
tb	run-tests.php	/^	$tb = strpos($b, "{$cwd}\/tests") === 0 ? 1 + (strpos($b, "{$cwd}\/tests\/run-test") === 0 ? 1 : 0) : 0;$/;"	v
temp	run-tests.php	/^					$temp = $temp . '(' . substr($wanted_re, $start+2, ($end - $start-2)). ')';$/;"	v
temp	run-tests.php	/^				$temp = $temp . preg_quote(substr($wanted_re, $startOffset, ($start - $startOffset)),  '\/');$/;"	v
temp	run-tests.php	/^			$temp = "";$/;"	v
temp	run-tests.php	/^		$temp = array_intersect(array('XFAIL', 'FAIL', 'WARN'), $type);$/;"	v
temp_clean	run-tests.php	/^	$temp_clean        = $temp_dir . DIRECTORY_SEPARATOR . $main_file_name . 'clean.php';$/;"	v
temp_dir	run-tests.php	/^		$temp_dir = $test_dir = $IN_REDIRECT['dir'];$/;"	v
temp_dir	run-tests.php	/^		$temp_dir = $test_dir = realpath(dirname($file));$/;"	v
temp_dir	run-tests.php	/^		$temp_dir = str_replace($temp_source, $temp_target, $temp_dir);$/;"	v
temp_file	run-tests.php	/^	$temp_file         = $temp_dir . DIRECTORY_SEPARATOR . $main_file_name . 'php';$/;"	v
temp_filenames	run-tests.php	/^		$temp_filenames = array($/;"	v
temp_filenames	run-tests.php	/^	$temp_filenames = null;$/;"	v
temp_skipif	run-tests.php	/^	$temp_skipif       = $temp_dir . DIRECTORY_SEPARATOR . $main_file_name . 'skip.php';$/;"	v
temp_source	run-tests.php	/^					$temp_source = $argv[++$i];$/;"	v
temp_source	run-tests.php	/^$temp_source = null;$/;"	v
temp_target	run-tests.php	/^					$temp_target = $argv[++$i];$/;"	v
temp_target	run-tests.php	/^$temp_target = null;$/;"	v
temp_urlbase	run-tests.php	/^						$temp_urlbase = $temp_target;$/;"	v
temp_urlbase	run-tests.php	/^					$temp_urlbase = $argv[++$i];$/;"	v
temp_urlbase	run-tests.php	/^$temp_urlbase = null;$/;"	v
test_clean	run-tests.php	/^	$test_clean        = $test_dir . DIRECTORY_SEPARATOR . $main_file_name . 'clean.php';$/;"	v
test_cnt	run-tests.php	/^	$test_cnt = count($test_files);$/;"	v
test_cnt	run-tests.php	/^$test_cnt = count($test_files);$/;"	v
test_dirs	run-tests.php	/^$test_dirs = array();$/;"	v
test_file	run-tests.php	/^	$test_file         = $test_dir . DIRECTORY_SEPARATOR . $main_file_name . 'php';$/;"	v
test_files	run-tests.php	/^					$test_files = array_merge($test_files, $pattern_match);$/;"	v
test_files	run-tests.php	/^		$test_files = array();$/;"	v
test_files	run-tests.php	/^	$test_files = array_merge($test_files, $redir_tests);$/;"	v
test_files	run-tests.php	/^	$test_files = array_unique($test_files);$/;"	v
test_files	run-tests.php	/^$test_files = array();$/;"	v
test_files	run-tests.php	/^$test_files = array_unique($test_files);$/;"	v
test_idx	run-tests.php	/^		$test_idx = 0;$/;"	v
test_idx	run-tests.php	/^$test_idx = 0;$/;"	v
test_list	run-tests.php	/^					$test_list = file($argv[++$i]);$/;"	v
test_name	run-tests.php	/^function test_name($name)$/;"	f
test_results	run-tests.php	/^$test_results = array();$/;"	v
test_skipif	run-tests.php	/^	$test_skipif       = $test_dir . DIRECTORY_SEPARATOR . $main_file_name . 'skip.php';$/;"	v
test_sort	run-tests.php	/^function test_sort($a, $b)$/;"	f
tested	run-tests.php	/^			$tested = "<a href='$url'>$tested<\/a>";$/;"	v
tested	run-tests.php	/^		$tested = $IN_REDIRECT['prefix'] . ' ' . trim($section_text['TEST']);$/;"	v
tested	run-tests.php	/^	$tested = trim($section_text['TEST']);$/;"	v
tested_file	run-tests.php	/^		$tested_file = $tmp_relative_file;$/;"	v
tested_file	run-tests.php	/^	$tested_file = $shortname;$/;"	v
testfile	run-tests.php	/^				$testfile = realpath("{$dir}\/{$name}");$/;"	v
testfile	run-tests.php	/^			$testfile = realpath($argv[$i]);$/;"	v
testname	run-tests.php	/^	$testname = realpath($testname);$/;"	v
time	run-tests.php	/^	$time = null !== $time ? $time : junit_get_timer($file_name);$/;"	v
time	run-tests.php	/^function junit_mark_test_as($type, $file_name, $test_name, $time = null, $message = '', $details = '') {$/;"	v
timeout	run-tests.php	/^	$timeout = $leak_check ? 300 : (isset($env['TEST_TIMEOUT']) ? $env['TEST_TIMEOUT'] : 60);$/;"	v
timestamp	molten_report.h	/^    long timestamp;             \/* error occour timestamp *\/$/;"	m	struct:__anon14
tm_yday	molten_log.h	/^    int tm_yday;                \/* day in year, get by ctime *\/$/;"	m	struct:__anon13
tmp_post	run-tests.php	/^	$tmp_post          = $temp_dir . DIRECTORY_SEPARATOR . uniqid('\/phpt.');$/;"	v
tmp_relative_file	run-tests.php	/^	$tmp_relative_file = str_replace(__DIR__ . DIRECTORY_SEPARATOR, '', $test_file) . 't';$/;"	v
top	common/molten_stack.h	/^    int size, top, max;$/;"	m	struct:__anon5
top_builddir	Makefile	/^top_builddir = \/root\/source\/molten\/Molten$/;"	m
top_srcdir	Makefile	/^top_srcdir = \/root\/source\/molten\/Molten$/;"	m
topic	molten_log.h	/^    char *topic;                \/* topic *\/$/;"	m	struct:__anon13
total_size	molten_log.h	/^    uint64_t total_size;$/;"	m	struct:__anon13
trace_id	molten_struct.h	/^    mo_chain_key_t *trace_id;           \/* trace id *\/$/;"	m	struct:__anon19
trace_original_error_cb	molten.c	/^void (*trace_original_error_cb)(int type, const char *error_filename, const uint error_lineno, const char *format, va_list args);$/;"	v
tracing_cli	php_molten.h	/^    zend_bool               tracing_cli;            \/* enable cli  tracing *\/$/;"	v
trans_log_by_kafka	molten_log.c	/^static void trans_log_by_kafka(mo_chain_log_t *log, char *post_data)$/;"	f	file:
type	molten_log.h	/^    uint8_t type;$/;"	m	struct:__anon12
type	molten_span.h	/^    uint8_t type;    $/;"	m	struct:__anon16
type	molten_struct.h	/^    uint8_t         type;             \/* frame type, entry or exit *\/$/;"	m	struct:__anon20
type	run-tests.php	/^		$type = reset($temp);$/;"	v
unix_socket	molten_log.h	/^    char *unix_socket;            \/* unix domain udp syslog *\/$/;"	m	struct:__anon13
uri	molten_report.h	/^    char *uri;                  \/* error uri *\/$/;"	m	struct:__anon14
url	run-tests.php	/^			$url = str_replace($temp_target, $temp_urlbase, $temp_filenames['diff']);$/;"	v
url	run-tests.php	/^			$url = str_replace($temp_target, $temp_urlbase, $temp_filenames['file']);$/;"	v
url	run-tests.php	/^			$url = str_replace($temp_target, $temp_urlbase, $temp_filenames['mem']);$/;"	v
url	run-tests.php	/^			$url = str_replace($temp_target, $temp_urlbase, $temp_filenames['skip']);$/;"	v
url	tests/molten_ot.php	/^$url = 'http:\/\/' . $hostname . ':' . $port;$/;"	v
url1	example/http_request.php	/^$url1 = "http:\/\/localhost:8971?trace=1";$/;"	v
url1	example/server.php	/^$url1 = "http:\/\/localhost:8972";$/;"	v
url1	example/server.php	/^$url1 = "http:\/\/localhost:8973";$/;"	v
url1	tests/change_span_id.php	/^$url1 = $path."?ch1=1&trace=1&reflect=1";$/;"	v
url1	tests/molten_011.php	/^$url1 = $e_path."?ch1=1&trace=1&reflect=1";$/;"	v
url1	tests/molten_ot.php	/^$url1 = $path."?ch1=1&trace=1&reflect=1";$/;"	v
url2	tests/molten_011.php	/^$url2 = $path."?ch2=1&trace=1&reflect=1";$/;"	v
url2	tests/molten_ot.php	/^$url2 = $path."?ch2=1&trace=1&reflect=1&header=test321";$/;"	v
url3	tests/molten_ot.php	/^$url3 = $path."?ch3=1&trace=1&reflect=1&header=testurl2";$/;"	v
url_bits	run-tests.php	/^	$url_bits = parse_url(QA_SUBMISSION_PAGE);$/;"	v
user_email	run-tests.php	/^				$user_email = 'travis at php dot net';$/;"	v
user_email	run-tests.php	/^				$user_email = str_replace("@", " at ", str_replace(".", " dot ", $user_email));$/;"	v
user_email	run-tests.php	/^				$user_email = trim(fgets($fp, 1024));$/;"	v
user_input	run-tests.php	/^				$user_input = 's';$/;"	v
user_input	run-tests.php	/^		$user_input = fgets($fp, 10);$/;"	v
user_tests	run-tests.php	/^	$user_tests = array();$/;"	v
user_tests	run-tests.php	/^	$user_tests = explode (',', getenv('TEST_PHP_USER'));$/;"	v
userh	example/response.php	/^    $userh = $_GET['header']; $/;"	v
userh	tool/response.php	/^    $userh = $_GET['header']; $/;"	v
util_lower	build/shtool	/^util_lower () {$/;"	f
util_upper	build/shtool	/^util_upper () {$/;"	f
val	molten_struct.h	/^    char *val;$/;"	m	struct:__anon18
val	run-tests.php	/^				$val = addslashes($val);$/;"	v
valgrind_cmd	run-tests.php	/^					$valgrind_cmd = "valgrind --version";$/;"	v
valgrind_header	run-tests.php	/^						$valgrind_header = trim($valgrind_header);$/;"	v
valgrind_header	run-tests.php	/^					$valgrind_header = system_with_timeout($valgrind_cmd, $environment);$/;"	v
valgrind_header	run-tests.php	/^$valgrind_header = '';$/;"	v
valgrind_version	run-tests.php	/^						$valgrind_version = preg_replace("\/valgrind-(\\d+)\\.(\\d+)\\.(\\d+)([.\\w_-]+)?(\\s+)\/", '$1.$2.$3', $valgrind_header, 1, $replace_count);$/;"	v
valgrind_version	run-tests.php	/^$valgrind_version = 0;$/;"	v
value	run-tests.php	/^				$value = addslashes($value);$/;"	v
value	run-tests.php	/^			$value = trim($setting[1]);$/;"	v
value	run-tests.php	/^function junit_suite_record($suite, $param, $value = 1) {$/;"	v
verify_config	run-tests.php	/^function verify_config()$/;"	f
w	run-tests.php	/^		$w = null;$/;"	v
w	run-tests.php	/^	$w = explode("\\n", $wanted);$/;"	v
want	run-tests.php	/^		$want = array();$/;"	v
wanted	run-tests.php	/^			$wanted = trim($section_text['EXPECTF']);$/;"	v
wanted	run-tests.php	/^			$wanted = trim($section_text['EXPECTREGEX']);$/;"	v
wanted	run-tests.php	/^		$wanted = $wanted_headers . "\\n--HEADERS--\\n" . $wanted;$/;"	v
wanted	run-tests.php	/^		$wanted = preg_replace('\/\\r\\n\/',"\\n", $wanted);$/;"	v
wanted	run-tests.php	/^		$wanted = trim($section_text['EXPECT']);$/;"	v
wanted_headers	run-tests.php	/^		$wanted_headers = array();$/;"	v
wanted_headers	run-tests.php	/^		$wanted_headers = join("\\n", $wanted_headers);$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = $temp;$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = preg_quote($wanted_headers . "\\n--HEADERS--\\n", '\/') . $wanted_re;$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace($/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace('%A', '.*', $wanted_re);$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace('%S', '[^\\r\\n]*', $wanted_re);$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace('%a', '.+', $wanted_re);$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace('%c', '.', $wanted_re);$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace('%d', '\\d+', $wanted_re);$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace('%e', '\\\\' . DIRECTORY_SEPARATOR, $wanted_re);$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace('%f', '[+-]?\\.?\\d+\\.?\\d*(?:[Ee][+-]?\\d+)?', $wanted_re);$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace('%i', '[+-]?\\d+', $wanted_re);$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace('%s', '[^\\r\\n]+', $wanted_re);$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace('%w', '\\s*', $wanted_re);$/;"	v
wanted_re	run-tests.php	/^			$wanted_re = str_replace('%x', '[0-9a-fA-F]+', $wanted_re);$/;"	v
wanted_re	run-tests.php	/^		$wanted_re = null;$/;"	v
wanted_re	run-tests.php	/^		$wanted_re = preg_replace('\/\\r\\n\/', "\\n", $wanted);$/;"	v
warn	run-tests.php	/^					$warn = true; \/* only if there is a reason *\/$/;"	v
warn	run-tests.php	/^					$warn = true;$/;"	v
warn	run-tests.php	/^	$warn = false;$/;"	v
writeConcern	tests/change_span_id.php	/^$writeConcern = new MongoDB\\Driver\\WriteConcern(MongoDB\\Driver\\WriteConcern::MAJORITY, 100);$/;"	v
writeConcern	tests/molten_008.php	/^$writeConcern = new MongoDB\\Driver\\WriteConcern(MongoDB\\Driver\\WriteConcern::MAJORITY, 100);$/;"	v
writeConcern	tests/molten_ot.php	/^$writeConcern = new MongoDB\\Driver\\WriteConcern(MongoDB\\Driver\\WriteConcern::MAJORITY, 100);$/;"	v
write_information	run-tests.php	/^function write_information($show_html)$/;"	f
x_failed	run-tests.php	/^		$x_failed = (100.0 * $sum_results['FAILED']) \/ $x_total;$/;"	v
x_leaked	run-tests.php	/^		$x_leaked = (100.0 * $sum_results['LEAKED']) \/ $x_total;$/;"	v
x_passed	run-tests.php	/^		$x_passed = (100.0 * $sum_results['PASSED']) \/ $x_total;$/;"	v
x_total	run-tests.php	/^	$x_total = $n_total - $sum_results['SKIPPED'] - $sum_results['BORKED'];$/;"	v
x_warned	run-tests.php	/^		$x_warned = $x_failed = $x_passed = $x_leaked = $x_xfailed = 0;$/;"	v
x_warned	run-tests.php	/^		$x_warned = (100.0 * $sum_results['WARNED']) \/ $x_total;$/;"	v
x_xfailed	run-tests.php	/^		$x_xfailed = (100.0 * $sum_results['XFAILED']) \/ $x_total;$/;"	v
xml	run-tests.php	/^	$xml = '<?xml version="1.0" encoding="UTF-8"?>'. PHP_EOL .$/;"	v
zend_flase	molten_chain.h	44;"	d
zend_true	molten_chain.h	43;"	d
zn_add_endpoint	molten_span.c	/^void zn_add_endpoint(zval *annotation, char *service_name, char *ipv4, long port) $/;"	f
zn_add_span_annotation	molten_span.c	/^void zn_add_span_annotation(zval *span, const char *value, long timestamp, char *service_name, char *ipv4, long port) $/;"	f
zn_add_span_annotation_ex	molten_span.c	/^void zn_add_span_annotation_ex(zval *span, const char *value, long timestamp, struct mo_chain_st *pct)$/;"	f
zn_add_span_bannotation	molten_span.c	/^void zn_add_span_bannotation(zval *span, const char *key, const char *value, char *service_name, char *ipv4, long port)$/;"	f
zn_add_span_bannotation_ex	molten_span.c	/^void zn_add_span_bannotation_ex(zval *span, const char *key, const char *value, struct mo_chain_st *pct) $/;"	f
zn_build_service_name	molten_span.c	/^char *zn_build_service_name(struct mo_chain_st *pct, char *service_name)$/;"	f
zn_span_add_ba_builder	molten_span.c	/^void zn_span_add_ba_builder(zval *span, const char *key, const char *value, long timestamp, char *service_name, char *ipv4, long port, uint8_t ba_type)$/;"	f
zn_span_add_ba_ex_builder	molten_span.c	/^void zn_span_add_ba_ex_builder(zval *span, const char *key, const char *value, long timestamp, struct mo_chain_st *pct, uint8_t ba_type) $/;"	f
zn_start_span	molten_span.c	/^void zn_start_span(zval **span, char *trace_id, char *server_name, char *span_id, char *parent_id, long timestamp, long duration) $/;"	f
zn_start_span_builder	molten_span.c	/^void zn_start_span_builder(zval **span, char *service_name, char *trace_id, char *span_id, char *parent_id, long start_time, long finish_time, struct mo_chain_st *pct, uint8_t an_type)$/;"	f
zn_start_span_ex	molten_span.c	/^void zn_start_span_ex(zval **span, char *server_name, struct mo_chain_st *pct, mo_frame_t *frame)$/;"	f
zn_start_span_ex_builder	molten_span.c	/^void zn_start_span_ex_builder(zval **span, char *service_name, struct mo_chain_st *pct, mo_frame_t *frame, uint8_t an_type)$/;"	f
